{"meta":{"title":"张成的博客","subtitle":"张成的博客","description":"无浪网、张成的博客、无浪博客、无风不起浪网由张成初期学习前端知识所做，仅供学习和资料储存使用！张成留言","author":"Zhangcheng","url":"http://yoursite.com"},"pages":[{"title":"Categories","date":"2019-03-14T09:04:24.000Z","updated":"2019-03-14T09:05:26.157Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2019-03-14T09:05:40.000Z","updated":"2020-10-30T06:22:50.900Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"关于我"},{"title":"留言","date":"2016-02-01T12:29:57.000Z","updated":"2019-02-22T05:38:48.000Z","comments":true,"path":"comment/index.html","permalink":"http://yoursite.com/comment/index.html","excerpt":"","text":""},{"title":"实验室","date":"2016-02-01T12:29:57.000Z","updated":"2019-02-22T05:38:48.000Z","comments":true,"path":"lab/index.html","permalink":"http://yoursite.com/lab/index.html","excerpt":"","text":""},{"title":"Friends","date":"2019-03-14T09:07:10.000Z","updated":"2020-10-30T06:21:44.893Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":"友链"},{"title":"Tags","date":"2019-03-14T09:05:50.000Z","updated":"2019-03-14T09:06:04.550Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"Webcode","date":"2019-03-16T08:15:45.000Z","updated":"2020-10-30T06:23:21.668Z","comments":true,"path":"webcode/index.html","permalink":"http://yoursite.com/webcode/index.html","excerpt":"","text":"我的页面 我整理的资料总览链接 潭州教育http://pan.baidu.com/s/11aXBcfywr_rzvuWv7pNF9Q 提取码：rxmg http://pan.baidu.com/s/1bo4SEuV 提取码：5iov http://pan.baidu.com/s/1jGYF7fw http://pan.baidu.com/s/1hqYSrrQ http://pan.baidu.com/s/1i4xgIH3 http://pan.baidu.com/s/1dDIQ1o9 http://pan.baidu.com/s/1jH4D6Z0 http://pan.baidu.com/s/1miNuTFq http://pan.baidu.com/s/1bGvtVo http://pan.baidu.com/s/1bpgUvsb http://pan.baidu.com/s/1bpgUvsb http://pan.baidu.com/s/1o86S0XW 妙味课堂http://pan.baidu.com/s/1o8hPb6M http://pan.baidu.com/s/1c0DwLiC http://pan.baidu.com/s/1hqwwsWc 腾讯课堂http://pan.baidu.com/s/1wL5IpNxZSQw5_YJ6QgSZBQ 慕课网http://pan.baidu.com/s/1qwT00f7JnDJ8f9I66XCFvQhttps://pan.baidu.com/s/1kVIe1Bx#list/path=%2Fhttp://pan.baidu.com/s/1nvykypj 素材AIhttp://pan.baidu.com/s/1pKfa6mfhttp://vdisk.weibo.com/u/2630646082http://pan.baidu.com/s/1o8kJq5O http://pan.baidu.com/s/1YtGHSJprjcTTEXs8SLvu4w http://pan.baidu.com/s/1hquYlRA http://pan.baidu.com/s/1dF4ragD Adobe cs6部分软件 https://pan.baidu.com/s/1c2v33Ss"}],"posts":[{"title":"","slug":"搭建/快速设置— 码云","date":"2020-10-08T10:59:18.042Z","updated":"2019-03-29T18:23:46.039Z","comments":true,"path":"2020/10/08/da-jian/kuai-su-she-zhi-ma-yun/","link":"","permalink":"http://yoursite.com/2020/10/08/da-jian/kuai-su-she-zhi-ma-yun/","excerpt":"","text":"快速设置— 如果你知道该怎么操作，直接使用下面的地址 https://gitee.com/zhangcheng0126/index.git我们强烈建议所有的git仓库都有一个README, LICENSE, .gitignore文件 Git入门？查看 帮助 , Visual Studio / TortoiseGit / Eclipse / Xcode 下如何连接本站, 如何导入仓库 简易的命令行入门教程: Git 全局设置: git config –global user.name “无风不起浪”git config –global user.email “2508723631@qq.com“创建 git 仓库: mkdir indexcd indexgit inittouch README.mdgit add README.mdgit commit -m “first commit”git remote add origin https://gitee.com/zhangcheng0126/index.gitgit push -u origin master已有仓库? cd existing_git_repogit remote add origin https://gitee.com/zhangcheng0126/index.gitgit push -u origin master","categories":[],"tags":[],"keywords":[]},{"title":"php的文件命令.md","slug":"后端/PHP/php的文件命令","date":"2019-06-15T05:28:31.000Z","updated":"2019-06-15T05:30:37.183Z","comments":true,"path":"2019/06/15/hou-duan/php/php-de-wen-jian-ming-ling/","link":"","permalink":"http://yoursite.com/2019/06/15/hou-duan/php/php-de-wen-jian-ming-ling/","excerpt":"","text":"` PHP &lt;?php $info = ob_get_contents(); // 这个是这个页面的所有信息 $filectime = filectime(&quot;index.html&quot;); // 这个index.html改成你需要的 if ( !(time() - 60 &gt; $filectime) ) { // 这个设置每天进行更换 3600*24是时间 exit(); } if ( $handle = @fopen(&#39;index.html&#39;, &#39;w&#39;) ) { // 这个index.html改成你需要的 @fwrite($handle, $info); @fclose($handle); } ?&gt;","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"php","slug":"php","permalink":"http://yoursite.com/tags/php/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"网站建设","slug":"搭建/免费搭建网站的虚拟空间主机","date":"2019-05-16T18:45:18.000Z","updated":"2019-05-16T18:48:40.469Z","comments":true,"path":"2019/05/17/da-jian/mian-fei-da-jian-wang-zhan-de-xu-ni-kong-jian-zhu-ji/","link":"","permalink":"http://yoursite.com/2019/05/17/da-jian/mian-fei-da-jian-wang-zhan-de-xu-ni-kong-jian-zhu-ji/","excerpt":"","text":"2019盘点可以用的免费虚拟空间大全 收集不易，请多多支持。希望大家可以用得到。 点蜜空间 http://my.10g.me/cart.php番茄互联 https://www.fqidc.cn/index.php/buy/index/10/#异云互联 http://www.1yit.cn/三丰云 https://www.sanfengyun.com/free/星空云空间 https://console.cloud.haosim.cn/index.php/buy/index/卓越互联 http://www.preec.com/hostview.asp?id=11凌宇云 http://raygzs.cn/index.php/buy/index/梦想互联 https://www.12ta.cn/?c=nproduct&amp;a=lists&amp;group_id=2YG-互联 http://www.idcyg.cn/index.php/buy/index/蓝天主机 http://free.qqyangyu.com/cart.php小云互联 http://www.vvvps.cn/buy/index/3/#梦月云 http://mengyueyun.cn/index.php/buy/index/host-sp互联 http://host.janzhi.cn/index.php/buy/index/光速互聯（注意用提示的优惠码，可以免费） https://lshost.cc/cart.php?a=confproduct&amp;i=0阡陌互联 http://qmhl.cc/index.php/buy/index/11/#智信云 http://www.zxhost.cn/index.php/buy/index/3/五星互联 http://www.5sidc.com/free-hosting.php安安互联 http://www.an56.org/无常互联 http://yal.698dg.cn/index.php/buy/index/3/#leadhoster https://www.leadhoster.com/index.html暮想云 http://www.58mxy.com/cart.php?gid=9 熊猫虚拟主机：www.ueidear.net 介绍：带CC防御的免费虚拟主机 腾博云主机 网址：http://tubor.com.cn 介绍：这个老不死主机很经打，除了不怎么稳，免空也都不错。316e云主机 网址：www.316e.net 介绍：推荐用里面的美国，香港日常抽风…星空云主机 网址：www.6zhen.cn 介绍：这个用来测试好，骚卡…苏联云主机 网址：http://host.idada.club 介绍：大致不错，日常备份，就是免空太少，官网稍卡…….烟雨云主机 网址：www.axin.date 介绍：主机不错，官网难被打死，免空有点少。松果云主机 网址：http://idc.zsnb.mobi 介绍：低防，不推荐，测试压力必备.橙子云主机 网址：http://idc.chengzi.ga/ 介绍：官网高防，产品有点卡..华庆云主机 网址：www.shery.cn 介绍：骚麻烦.景安网址：http://vps.zzidc.com/free.html 介绍：我还能说什么？？？小宇云主机 网址：http://yuidc.top 介绍：主要对接别人，偷了别人很多优秀免空，做了很久，信誉有点问题，用免费就好。星联IDC 网址：http://host.dlidc.ml 介绍：产品骚卡，官网还行小金云主机 网址：http://2xj.top 介绍：官网骚卡，产品还行 华为免费服务器（推荐） 网址：www.hwclouds.com 介绍：免费6个月已经超神很久了 至少比其他大型的大方多少万倍。京东云免费服务器 网址：jcloud.com 介绍：想去就去 不想就算了 使用期比较短腾讯云免费服务器（推荐） 网址：cloud.tencent.com 介绍：还行还行 以前华为云没出时相对不错的。百度云免费服务器 网址：cloud.baidu.com 介绍：也不错，仅次华为。 趣零免费域名 网址：www.qu0.cn 介绍：稳定很久了FREEnom 网址：www.freenom.com 介绍：稳定好久了景安top（需实名） 网址：zzidc.com 介绍：稳定好久了新网CLUB （一元） 网址：www.xinnet.com 介绍：稳定好久了阿里云1元top，online，ltd，group 网址：https://wanwang.aliyun.com/domain/1yuan?spm=5176.8006371.1003.1club.6fa6f4608Vdndw 介绍：超级棒的活动 趁早撸 撸完就没了 我的主站：无风不起浪网 http://wufengbuqilangwang.top/index/index.html","categories":[{"name":"网站服务器与虚拟主机","slug":"网站服务器与虚拟主机","permalink":"http://yoursite.com/categories/网站服务器与虚拟主机/"}],"tags":[{"name":"虚拟主机","slug":"虚拟主机","permalink":"http://yoursite.com/tags/虚拟主机/"}],"keywords":[{"name":"网站服务器与虚拟主机","slug":"网站服务器与虚拟主机","permalink":"http://yoursite.com/categories/网站服务器与虚拟主机/"}]},{"title":"AI基础视频课程","slug":"软件设计/ai/AI基础视频","date":"2019-04-17T04:40:29.000Z","updated":"2019-04-17T04:41:59.379Z","comments":true,"path":"2019/04/17/ruan-jian-she-ji/ai/ai-ji-chu-shi-pin/","link":"","permalink":"http://yoursite.com/2019/04/17/ruan-jian-she-ji/ai/ai-ji-chu-shi-pin/","excerpt":"","text":"腾讯课堂AI基础视频课程","categories":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}],"tags":[{"name":"设计类","slug":"设计类","permalink":"http://yoursite.com/tags/设计类/"},{"name":"AI","slug":"AI","permalink":"http://yoursite.com/tags/AI/"}],"keywords":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}]},{"title":"css基础及选择器常用属性.md","slug":"前端/html5_css3/css基础及选择器常用属性","date":"2019-04-08T12:16:14.000Z","updated":"2019-04-08T12:49:48.290Z","comments":true,"path":"2019/04/08/qian-duan/html5-css3/css-ji-chu-ji-xuan-ze-qi-chang-yong-shu-xing/","link":"","permalink":"http://yoursite.com/2019/04/08/qian-duan/html5-css3/css-ji-chu-ji-xuan-ze-qi-chang-yong-shu-xing/","excerpt":"","text":"/*不推荐大家使用，不利与优化*/ @import url(&quot;./1.css&quot;); 属性选择器讲解 img[title=”1dasdadad”]{border:1px solid red;} div[class=”sulia”]{color:red;} div[class~=”sulia”]{color:#abcdef;} div[class|=”job-kimi”]{color:#996;} div[class=”sulia”][title]{color:black;} &lt;img src=&quot;&quot; title=&quot;1dasdadad&quot;&gt; &lt;img src=&quot;&quot; title=&quot;1dasdadad&quot;&gt; &lt;img src=&quot;&quot; title=&quot;job&quot;&gt; &lt;div class=&quot;job&quot;&gt;adada&lt;/div&gt; &lt;div class=&quot;sulia&quot; title=&quot;a&quot;&gt;adada&lt;/div&gt; &lt;div class=&quot;job sulia&quot; &gt;asdad&lt;/div&gt; &lt;div class=&quot;job-kimi&quot; &gt;4132132132&lt;/div&gt; &lt;div class=&quot;pp&quot;&gt;aaaaaaa&lt;/div&gt; &lt;div class=&quot;ss&quot;&gt;bbbbbbbbb&lt;/div&gt; &lt;div class=&quot;pop&quot;&gt;cccccccc&lt;/div&gt; &lt;div class=&quot;poop&quot;&gt;ddddddddd&lt;/div&gt; div[class^=&quot;p&quot;]{color:red;} div[class$=&quot;o&quot;]{color:green;} div[class*=&quot;op&quot;]{color:blue;} 通用基础选择器 a,address,b,big,blockquote,body,center,cite,code,dd,del,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,html,i,iframe,img,ins,label,legend,li,ol,p,pre,small,span,strong,u,ul,var{margin:0;padding:0} 伪类选择器 a:first-child{color:green;} a:visited{color:green;} a:hover{color:red;} 伪元素选择器 p:first-line{color:#452;} div:before{content:”…………………”; } div:after{content:”爱上你了”;} 组合选择器 .a,.b{color:#f96;} div.a{color:red;} p.d&gt;a{color:#666;} p.d a{ color:red;} div + div{ color:green;} div~.pp{ color:#abcd12; } 用户页面有关的伪类 input[type=”text”]:enabled{background:red;} input[type=”text”]:disabled{background:green;} input:checked{width:100px;} ::selection{ color:#abcdef; } * * * /*-moz-Gecko引擎的浏览器（Firefox）*/ -webkit-(chrome、safari) -o- -ms- ie transition: -webkit-transition: -moz-transition: -o-transition: 结构性|反选伪类 :root{ background:#abcdef;}; p:nth-child(3){color:red;} div a:nth-child(2){color:green;} div a:nth-last-child(2){color:blue;} div a:nth-of-type(odd){color:#666;} div a:last-child{color:#abcdef;} div p:nth-child(3n+1){color:#960;} :not(p){color:orange;}; :target{ color:red; };","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://yoursite.com/tags/html5/"},{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"字体与文本相关属性","slug":"前端/html5_css3/字体与文本相关属性","date":"2019-04-08T12:16:14.000Z","updated":"2019-04-08T12:54:05.028Z","comments":true,"path":"2019/04/08/qian-duan/html5-css3/zi-ti-yu-wen-ben-xiang-guan-shu-xing/","link":"","permalink":"http://yoursite.com/2019/04/08/qian-duan/html5-css3/zi-ti-yu-wen-ben-xiang-guan-shu-xing/","excerpt":"","text":"","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://yoursite.com/tags/html5/"},{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"HTML5常用标签属性","slug":"前端/html5_css3/html5常用标签属性","date":"2019-04-07T16:00:00.000Z","updated":"2019-04-08T12:49:10.627Z","comments":true,"path":"2019/04/08/qian-duan/html5-css3/html5-chang-yong-biao-qian-shu-xing/","link":"","permalink":"http://yoursite.com/2019/04/08/qian-duan/html5-css3/html5-chang-yong-biao-qian-shu-xing/","excerpt":"","text":"事件元素 contentEditable=”true” ondblclick=”document.designMode=’on’” 文档结构元素讲解 job老师有点帅 作者：job 还在帅呢 以上都是job老师的观点 &lt;hgroup&gt; &lt;h1&gt;adad&lt;/h1&gt; &lt;h2&gt;dad&lt;/h2&gt; &lt;/hgroup&gt; &lt;figure&gt; &lt;figcaption&gt;job老师很帅&lt;/figcaption&gt; &lt;img src=&quot;&quot;&gt; &lt;img src=&quot;&quot;&gt; &lt;/figure&gt; &lt;/body&gt; &lt;/html&gt; 语义相关元素讲解 &lt;mark&gt;job老师很帅&lt;/mark&gt; &lt;time datetime=&quot;2016-9-11&quot;&gt;2016-9-11&lt;/time&gt; 特殊功能的元素 120 &lt;meter value=&quot;0.8&quot;&gt;&lt;/meter&gt; min 定义最小值 max 定义最大值 value 定义度量的值 low 定义度量的值位于那个点，界定为低的值 high 定义度量的值位于那个点，界定为高的值 optimum 定义什么值是最佳的 &lt;progress max=&quot;100&quot; value=&quot;60&quot; style=&quot;width:200px;border:1px solid #f60;color:#666;background:#abcdef;&quot;&gt;11&lt;/progress&gt; spellcheck、文本域属性讲解 button nnnn &lt;button type=&quot;submit&quot; value=&quot;btn&quot;&gt; &lt;img src=&quot;https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/logo_white_fe6da1ec.png&quot; alt=&quot;&quot;&gt;&lt;/button&gt; 表单元素讲解 input表单控件讲解 男 女 &lt;input type=&quot;checkbox&quot; name=&quot;checkbox&quot; value=&quot;1&quot; checked=checked&gt;篮球 &lt;input type=&quot;checkbox&quot; name=&quot;checkbox&quot; value=&quot;1&quot;&gt;足球 &lt;input type=&quot;checkbox&quot; name=&quot;checkbox&quot; value=&quot;1&quot;&gt;游泳&lt;br/&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;&lt;br/&gt; &lt;input type=&quot;hidden&quot; name=&quot;hidden&quot; value=&quot;job&quot;&gt;123&lt;br/&gt; 密码：&lt;input type=&quot;password&quot; name=&quot;password&quot; value=&quot;&quot; size=&quot;100&quot;&gt;&lt;br/&gt; &lt;input type=&quot;button&quot; name=&quot;button&quot; value=&quot;搜索&quot;&gt; &lt;input type=&quot;reset&quot; name=&quot;reset&quot; value=&quot;重填&quot;&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt; label属性讲解 用户名： 密码： 男 女 select下拉列表讲解 &lt;select size=&quot;3&quot; id=&quot;sel&quot; name=&quot;sel&quot; multiple=multiple required=required&gt;&lt;/select&gt; &lt;select name=&quot;year&quot;&gt; &lt;optgroup label=&quot;00后&quot;&gt; &lt;option value=&quot;2000&quot;&gt;2001&lt;/option&gt; &lt;option value=&quot;2000&quot;&gt;2000&lt;/option&gt; &lt;/optgroup&gt; &lt;optgroup label=&quot;90后&quot;&gt; &lt;option value=&quot;1999&quot;&gt;1999&lt;/option&gt; &lt;option value=&quot;1998&quot;&gt;1998&lt;/option&gt; &lt;option value=&quot;1997&quot;&gt;1997&lt;/option&gt; &lt;option value=&quot;1996&quot;&gt;1996&lt;/option&gt; &lt;option value=&quot;1995&quot;&gt;1995&lt;/option&gt; &lt;option value=&quot;1994&quot;&gt;1994&lt;/option&gt; &lt;option value=&quot;1993&quot;&gt;1993&lt;/option&gt; &lt;option value=&quot;1992&quot;&gt;1992&lt;/option&gt; &lt;/optgroup&gt; &lt;/select&gt;年 &lt;select name=&quot;month&quot;&gt;月 &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt; &lt;option value=&quot;4&quot;&gt;4&lt;/option&gt; &lt;option value=&quot;5&quot;&gt;5&lt;/option&gt; &lt;option value=&quot;6&quot;&gt;6&lt;/option&gt; &lt;option value=&quot;7&quot;&gt;7&lt;/option&gt; &lt;option value=&quot;8&quot;&gt;8&lt;/option&gt; &lt;option value=&quot;9&quot;&gt;9&lt;/option&gt; &lt;option value=&quot;10&quot;&gt;10&lt;/option&gt; &lt;option value=&quot;11&quot;&gt;11&lt;/option&gt; &lt;option value=&quot;12&quot;&gt;12&lt;/option&gt; &lt;/select&gt;月 &lt;select name=&quot;day&quot;&gt;日 &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt; &lt;option value=&quot;4&quot;&gt;4&lt;/option&gt; &lt;option value=&quot;5&quot;&gt;5&lt;/option&gt; &lt;option value=&quot;6&quot;&gt;6&lt;/option&gt; &lt;option value=&quot;7&quot;&gt;7&lt;/option&gt; &lt;option value=&quot;8&quot;&gt;8&lt;/option&gt; &lt;option value=&quot;9&quot;&gt;9&lt;/option&gt; &lt;option value=&quot;10&quot;&gt;10&lt;/option&gt; &lt;option value=&quot;11&quot;&gt;11&lt;/option&gt; &lt;option value=&quot;12&quot;&gt;12&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;13&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;14&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;15&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;16&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;17&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;18&lt;/option&gt; &lt;option value=&quot;1&quot;&gt;19&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;20&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;21&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;22&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;23&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;24&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;25&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;26&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;27&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;28&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;29&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;30&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;31&lt;/option&gt; &lt;/select&gt;日 autofocus属性讲解[焦点属性] 用户名： 密码： &lt;/form&gt; html5form属性讲解 &lt;form id=&quot;aForm&quot; action=&quot;#&quot; method=&quot;get&quot;&gt; job:&lt;input type=&quot;text&quot; name=&quot;job&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;搜索&quot;&gt; &lt;/form&gt; job描述:&lt;textarea name=&quot;de&quot; form=&quot;aForm&quot;&gt;&lt;/textarea&gt; &lt;form method=&quot;get&quot; action=&quot;&quot;&gt; 用户名:&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; 密码:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;修改&quot; formaction=&quot;login.html&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;注册&quot; formaction=&quot;regist.html&quot;&gt; &lt;/form&gt; &lt;form method=&quot;get&quot; action=&quot;#&quot;&gt; 用户名:&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt; 密码:&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;get提交&quot; formmethod=&quot;get&quot; formtarget=&quot;_blank&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;post提交&quot; formmethod=&quot;post&quot; formtarget=&quot;_top&quot;&gt; &lt;/form&gt; 新增html5input属性讲解 颜色: 日期: 时间: 日期、时间: 周: 月份: e-mail: 电话: url: range: search: output属性讲解 0 100 &lt;/form&gt; &lt;form oninput=&quot;y.value=co.value&quot;&gt; &lt;input type=&quot;color&quot; name=&quot;co&quot; id=&quot;co&quot;&gt; &lt;output name=&quot;y&quot; for=&quot;co&quot;&gt;&lt;/output&gt; &lt;input type=&quot;submit&quot; value=&quot;tjiao &quot;&gt; &lt;/form&gt; &amp;lt;p&amp;gt;job老师很帅&amp;lt;/p&amp;gt;&lt;br/&gt; &amp;quot;job&amp;quot;&lt;br/&gt; job&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;老师&lt;br/&gt; &amp;copy;2019.4.8 placeholder属性讲解 用户名： 密码： &lt;/form&gt;","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://yoursite.com/tags/html5/"},{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"php入门第一天.md","slug":"后端/PHP/入门第一天","date":"2019-04-03T15:42:55.000Z","updated":"2019-04-06T17:05:27.905Z","comments":true,"path":"2019/04/03/hou-duan/php/ru-men-di-yi-tian/","link":"","permalink":"http://yoursite.com/2019/04/03/hou-duan/php/ru-men-di-yi-tian/","excerpt":"","text":"集成化PHP环境安装 PHPnowWampServer 推荐XAMPP 在Windows、Linux、Solaris三种操作系统下安装使用shopExAPMServ 5.2.6 以上任选一款就可以了 环境变量 D:\\wamp\\bin\\mysql\\mysql5.0.51b\\bin 数据库的建立","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"php","slug":"php","permalink":"http://yoursite.com/tags/php/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"HTML  代码块","slug":"前端/html/html代码块","date":"2019-04-02T12:12:19.000Z","updated":"2019-04-02T12:14:07.470Z","comments":true,"path":"2019/04/02/qian-duan/html/html-dai-ma-kuai/","link":"","permalink":"http://yoursite.com/2019/04/02/qian-duan/html/html-dai-ma-kuai/","excerpt":"","text":"&lt;marquee behavior=&quot;&quot; direction=&quot;&quot; scrollamount=&quot;20&quot;&gt; 内容 &lt;/marquee&gt;","categories":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}],"keywords":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}]},{"title":"PhotoshopCC2018纯净一键安装版","slug":"软件设计/ps/ps安装纯净版","date":"2019-03-29T10:16:38.000Z","updated":"2019-03-29T18:30:51.060Z","comments":true,"path":"2019/03/29/ruan-jian-she-ji/ps/ps-an-zhuang-chun-jing-ban/","link":"","permalink":"http://yoursite.com/2019/03/29/ruan-jian-she-ji/ps/ps-an-zhuang-chun-jing-ban/","excerpt":"","text":"PhotoshopCC2018纯净一键安装版链接：https://pan.baidu.com/s/1rkjKl9lFrUHeK8sz-5Rl7g 提取码：nli9","categories":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}],"tags":[{"name":"设计类","slug":"设计类","permalink":"http://yoursite.com/tags/设计类/"},{"name":"ps","slug":"ps","permalink":"http://yoursite.com/tags/ps/"}],"keywords":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}]},{"title":"总结HTML5 Meat的标签","slug":"前端/html5_css3/meta标签","date":"2019-03-29T00:57:46.000Z","updated":"2019-03-28T21:19:28.211Z","comments":true,"path":"2019/03/29/qian-duan/html5-css3/meta-biao-qian/","link":"","permalink":"http://yoursite.com/2019/03/29/qian-duan/html5-css3/meta-biao-qian/","excerpt":"","text":"一些常用的移动端的meta属性设置 &lt;!DOCTYPE html> &lt;!-- 使用 HTML5 doctype，不区分大小写 --> &lt;html lang=\"zh-cmn-Hans\"> &lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --> &lt;head> &lt;!-- 声明文档使用的字符编码 --> &lt;meta charset='utf-8'> &lt;!-- 优先使用 IE 最新版本和 Chrome --> &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/> &lt;!-- 页面描述 --> &lt;meta name=\"description\" content=\"不超过150个字符\"/> &lt;!-- 页面关键词 --> &lt;meta name=\"keywords\" content=\"\"/> &lt;!-- 网页作者 --> &lt;meta name=\"author\" content=\"name, email@gmail.com\"/> &lt;!-- 搜索引擎抓取 --> &lt;meta name=\"robots\" content=\"index,follow\"/> &lt;!-- 为移动设备添加 viewport --> &lt;meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"> &lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --> iOS 设备 begin &lt;meta name=\"apple-mobile-web-app-title\" content=\"标题\"> &lt;!-- 添加到主屏后的标题（iOS 6 新增） --> &lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/> &lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --> &lt;meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"> &lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --> &lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/> &lt;!-- 设置苹果工具栏颜色 --> &lt;meta name=\"format-detection\" content=\"telphone=no, email=no\"/> &lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --> &lt;!-- 启用360浏览器的极速模式(webkit) --> &lt;meta name=\"renderer\" content=\"webkit\"> &lt;!-- 避免IE使用兼容模式 --> &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> &lt;!-- 不让百度转码 --> &lt;meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" /> &lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --> &lt;meta name=\"HandheldFriendly\" content=\"true\"> &lt;!-- 微软的老式浏览器 --> &lt;meta name=\"MobileOptimized\" content=\"320\"> &lt;!-- uc强制竖屏 --> &lt;meta name=\"screen-orientation\" content=\"portrait\"> &lt;!-- QQ强制竖屏 --> &lt;meta name=\"x5-orientation\" content=\"portrait\"> &lt;!-- UC强制全屏 --> &lt;meta name=\"full-screen\" content=\"yes\"> &lt;!-- QQ强制全屏 --> &lt;meta name=\"x5-fullscreen\" content=\"true\"> &lt;!-- UC应用模式 --> &lt;meta name=\"browsermode\" content=\"application\"> &lt;!-- QQ应用模式 --> &lt;meta name=\"x5-page-mode\" content=\"app\"> &lt;!-- windows phone 点击无高光 --> &lt;meta name=\"msapplication-tap-highlight\" content=\"no\"> &lt;!-- iOS 图标 begin --> &lt;link rel=\"apple-touch-icon-precomposed\" href=\"/apple-touch-icon-57x57-precomposed.png\"/> &lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --> &lt;link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"/apple-touch-icon-114x114-precomposed.png\"/> &lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --> &lt;link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"/apple-touch-icon-144x144-precomposed.png\"/> &lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --> &lt;!-- iOS 图标 end --> &lt;!-- iOS 启动画面 begin --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/> &lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/> &lt;!-- iPad 竖屏 1536x2008（Retina） --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/> &lt;!-- iPad 横屏 1024x748（标准分辨率） --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/> &lt;!-- iPad 横屏 2048x1496（Retina） --> &lt;link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/> &lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/> &lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --> &lt;link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/> &lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --> &lt;!-- iOS 启动画面 end --> &lt;!-- iOS 设备 end --> &lt;meta name=\"msapplication-TileColor\" content=\"#000\"/> &lt;!-- Windows 8 磁贴颜色 --> &lt;meta name=\"msapplication-TileImage\" content=\"icon.png\"/> &lt;!-- Windows 8 磁贴图标 --> &lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/> &lt;!-- 添加 RSS 订阅 --> &lt;link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/> &lt;!-- 添加 favicon icon --> &lt;!-- sns 社交标签 begin --> &lt;!-- 参考微博API --> &lt;meta property=\"og:type\" content=\"类型\" /> &lt;meta property=\"og:url\" content=\"URL地址\" /> &lt;meta property=\"og:title\" content=\"标题\" /> &lt;meta property=\"og:image\" content=\"图片\" /> &lt;meta property=\"og:description\" content=\"描述\" /> &lt;!-- sns 社交标签 end --> &lt;title>标题&lt;/title> &lt;/head>","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"},{"name":"html5","slug":"html5","permalink":"http://yoursite.com/tags/html5/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"Css和css3的一些属性方法","slug":"前端/css/css和css3的一些属性方法","date":"2019-03-27T14:05:23.000Z","updated":"2019-06-26T08:01:32.534Z","comments":true,"path":"2019/03/27/qian-duan/css/css-he-css3-de-yi-xie-shu-xing-fang-fa/","link":"","permalink":"http://yoursite.com/2019/03/27/qian-duan/css/css-he-css3-de-yi-xie-shu-xing-fang-fa/","excerpt":"","text":"CSS权重 CSS权重指的是样式的优先级，有两条或多条样式作用于一个元素，权重高的那条样式对元素起作用,权重相同的，后写的样式会覆盖前面写的样式。 权重的等级可以把样式的应用方式分为几个等级，按照等级来计算权重 1、!important，加在样式属性值后，权重值为 100002、内联样式，如：style=””，权重值为10003、ID选择器，如：#content，权重值为1004、类，伪类和属性选择器，如： content、:hover 权重值为105、标签选择器和伪元素选择器，如：div、p、:before 权重值为16、通用选择器（*）、子选择器（&gt;）、相邻选择器（+）、同胞选择器（~）、权重值为0 清除浮动 父级上增加属性overflow：hidden在最后一个子元素的后面加一个空的div，给它样式属性 clear:both（不推荐）使用成熟的清浮动样式类，clearfix.clearfix:after,.clearfix:before{ content: “”;display: table;}.clearfix:after{ clear:both;}.clearfix{zoom:1;}清除浮动的使用方法：.con2{… overflow:hidden}或者div class=”con2 clearfix” 1.盒子绝对居中(第一种方法) position: absolute; top: 50%; margin-top:-100px; left: 50%; margin-left: -100px;2.盒子绝对居中(第二种方法) position: absolute; top: 0;bottom: 0;left:0 ;right:0 ; margin: auto;3.盒子绝对居中(第三种方法) html,body{height: 100%;} body{display: flex;}或者flex改为grid。 __{ width: 200px; height: 200px;margin: auto;} 4.定位布局html,body{width:100% ;height:100%;position: relative;display:flex;justify-content:center;align-items:center;overflow:hidden;} display: flex; justify-content:space-around;/*左右均分*/ align-items:center;/*上下均分*/ /css3动画名称 时间 速度【匀速：linear】 循环【持续：infinite】/ animation:move 8s linear infinite; -webkit-animation:move 3s linear infinite; @keyframes move{ 0%{ left: 200px;} 100%{left: -200px;} } @keyframes fun{ 0%{transform:rotate(0deg);} 25%{transform:rotate(90deg);} 50%{transform:rotate(180deg);} 75%{transform:rotate(270deg);} 100%{transform:rotate(360deg);} } 同级元素选择.love:nth-child(2){}.love:nth-of-type(2){} /线性渐变/-webkit-linear-gradient(#ffff00 10%,#00ffff 40%,#ff00ff 10%); 3D空间ransform-style:preserve-3d; //随机颜色 至少有七种写法 function randomColor(){ var r=Math.floor(Math.random()255); var g=Math.floor(Math.random()255); var b=Math.floor(Math.random()*255); return “rgb(“+r+”,”+g+”,”+b+”)”; } CSS border-collapse 属性 ：http://www.w3school.com.cn/cssref/pr_tab_border-collapse.asp CSS vertical-align 属性 ：http://www.w3school.com.cn/cssref/pr_pos_vertical-align.asp CSS letter-spacing 属性 ：字间距（in cm mm px em pt） http://www.w3school.com.cn/cssref/pr_text_letter-spacing.asp","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"Css","slug":"Css","permalink":"http://yoursite.com/tags/Css/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"CSS3新增选择器","slug":"前端/css/css3新增选择器","date":"2019-03-27T14:05:23.000Z","updated":"2019-06-26T08:03:45.947Z","comments":true,"path":"2019/03/27/qian-duan/css/css3-xin-zeng-xuan-ze-qi/","link":"","permalink":"http://yoursite.com/2019/03/27/qian-duan/css/css3-xin-zeng-xuan-ze-qi/","excerpt":"","text":"CSS3新增选择器1、E:nth-child(n)：匹配元素类型为E且是父元素的第n个子元素 &lt;style type=”text/css”&gt; .list div:nth-child(2){ background-color:red; }&lt;/style&gt;……&lt;div class=”list”&gt; &lt;h2&gt;1&lt;/h2&gt; &lt;div&gt;2&lt;/div&gt; &lt;div&gt;3&lt;/div&gt; &lt;div&gt;4&lt;/div&gt; &lt;div&gt;5&lt;/div&gt;&lt;/div&gt;&lt;!– 第2个子元素div匹配 –&gt;2、E:nth-last-child(n)：匹配元素类型为E且是父元素的倒数第n个子元素（与上一项顺序相反）3、E:first-child：匹配元素类型为E且是父元素的第一个子元素4、E:last-child：匹配元素类型为E且是父元素的最后一个子元素5、E:only-child：匹配元素类型为E且是父元素中唯一的子元素6、E:nth-of-type(n)：匹配父元素的第n个类型为E的子元素7、E:nth-last-of-type(n)：匹配父元素的倒数第n个类型为E的子元素（与上一项顺序相反）8、E:first-of-type：匹配父元素的第一个类型为E的子元素9、E:last-of-type：匹配父元素的最后一个类型为E的子元素10、E:only-of-type：匹配父元素中唯一子元素是E的子元素11、E:empty 选择一个空的元素12、E:enabled 可用的表单控件13、E:disabled 失效的表单控件14、E:checked 选中的checkbox15、E:not(s) 不包含某元素 &lt;style type=”text/css”&gt; .list div:not(:nth-child(2)){ background-color:red; }&lt;/style&gt;……&lt;div class=”list”&gt; &lt;h2&gt;1&lt;/h2&gt; &lt;div&gt;2&lt;/div&gt; &lt;div&gt;3&lt;/div&gt; &lt;div&gt;4&lt;/div&gt; &lt;div&gt;5&lt;/div&gt;&lt;/div&gt;&lt;!– 第 3、4、5 子元素div匹配 –&gt;16、E:target 对应锚点的样式 &lt;style type=”text/css”&gt; h2:target{ color:red; }&lt;/style&gt;……&lt;a href=”#tit01”&gt;标题一&lt;/a&gt;……&lt;h2 id=”tit01”&gt;标题一&lt;/h2&gt;&lt;!– 点击链接，h2标题变红 –&gt;17、E &gt; F E元素下面第一层子集18、E ~ F E元素后面的兄弟元素19、E + F 紧挨着的兄弟元素 属性选择器：1、E[data-attr] 含有data-attr属性的元素 &lt;style type=”text/css”&gt; div[data-attr=’ok’]{ color:red; }&lt;/style&gt;……&lt;div data-attr=”ok”&gt;这是一个div元素&lt;/div&gt;&lt;!– 点击链接，h2标题变红 –&gt;2、E[data-attr=’ok’] 含有data-attr属性的元素且它的值为“ok”3、E[data-attr^=’ok’] 含有data-attr属性的元素且它的值的开头含有“ok”4、E[data-attr$=’ok’] 含有data-attr属性的元素且它的值的结尾含有“ok”5、E[data-attr*=’ok’] 含有data-attr属性的元素且它的值中含有“ok”","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"Css3","slug":"Css3","permalink":"http://yoursite.com/tags/Css3/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"Ps注册表清除","slug":"软件设计/ps/p注册表清除","date":"2019-03-25T09:16:38.000Z","updated":"2019-03-25T09:49:00.829Z","comments":true,"path":"2019/03/25/ruan-jian-she-ji/ps/p-zhu-ce-biao-qing-chu/","link":"","permalink":"http://yoursite.com/2019/03/25/ruan-jian-she-ji/ps/p-zhu-ce-biao-qing-chu/","excerpt":"","text":"ps注册表清除两种方法方法一： 1.运行 regedit 打开注册表编辑器。2.依次展开HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager目录，找到其中的 PendingFileRenameOperations 项目，直接右键，选择“删除”即可。3.删除C:\\Program Files\\Common Files\\Adobe目录即可 4.清除成功后，别忘记了重启下电脑，这步是不可或缺的哦！ 实在不行看我这里 方法二： 下载软件Adobe_Creative_Cloud_Cleaner_Tool并解压，找到文件夹中的如图安装包，点击进行安装。 Adobe官方卸载工具： 下载地址：http://www.yishimei.cn/download/AdobeCreativeCloudCleanerTool.exe 1.打开后我们可以看到类似于命令提示符的操作界面，我们输入“e”选择英文界面。 2.按下回车键后，回复“y”确认同意以上消息。 3.在弹出的界面中显示出已经安装的相应版本信息，回复相应数字选中相应版本。 4.这里我选择1,如果安装了其他的adobe软件最好注意下,回车后,显示1.clean all,回复1确认清空所有消息。 5.系统显示确认信息，回复 y 确认删除，稍等片刻即可清除注册表信息。 6.清除成功后，别忘记了重启下电脑，这步是不可或缺的！","categories":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}],"tags":[{"name":"设计类","slug":"设计类","permalink":"http://yoursite.com/tags/设计类/"},{"name":"ps","slug":"ps","permalink":"http://yoursite.com/tags/ps/"}],"keywords":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}]},{"title":"HTML 速查列表","slug":"前端/html/html列表","date":"2019-03-21T12:15:00.000Z","updated":"2019-03-29T18:36:36.734Z","comments":true,"path":"2019/03/21/qian-duan/html/html-lie-biao/","link":"","permalink":"http://yoursite.com/2019/03/21/qian-duan/html/html-lie-biao/","excerpt":"","text":"HTML 速查列表https://www.lanzous.com/i3lo13c密码:990126 HTML 基本文档 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 可见文本... &lt;/body&gt; &lt;/html&gt; 基本标签（Basic Tags） &lt;h1&gt;最大的标题&lt;/h1&gt; &lt;h2&gt; . . . &lt;/h2&gt; &lt;h3&gt; . . . &lt;/h3&gt; &lt;h4&gt; . . . &lt;/h4&gt; &lt;h5&gt; . . . &lt;/h5&gt; &lt;h6&gt;最小的标题&lt;/h6&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;br&gt; （换行） &lt;hr&gt; （水平线） &lt;!-- 这是注释 --&gt; 文本格式化（Formatting） &lt;b&gt;粗体文本&lt;/b&gt; &lt;code&gt;计算机代码&lt;/code&gt; &lt;em&gt;强调文本&lt;/em&gt; &lt;i&gt;斜体文本&lt;/i&gt; &lt;kbd&gt;键盘输入&lt;/kbd&gt; &lt;pre&gt;预格式化文本&lt;/pre&gt; &lt;small&gt;更小的文本&lt;/small&gt; &lt;strong&gt;重要的文本&lt;/strong&gt; &lt;abbr&gt; （缩写） &lt;address&gt; （联系信息） &lt;bdo&gt; （文字方向） &lt;blockquote&gt; （从另一个源引用的部分） &lt;cite&gt; （工作的名称） &lt;del&gt; （删除的文本） &lt;ins&gt; （插入的文本） &lt;sub&gt; （下标文本） &lt;sup&gt; （上标文本） 链接（Links） 普通的链接：&lt;a href=&quot;http://www.example.com/&quot;&gt;链接文本&lt;/a&gt; 图像链接： &lt;a href=&quot;http://www.example.com/&quot;&gt;&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot;&gt;&lt;/a&gt; 邮件链接： &lt;a href=&quot;mailto:webmaster@example.com&quot;&gt;发送e-mail&lt;/a&gt; 书签： &lt;a id=&quot;tips&quot;&gt;提示部分&lt;/a&gt; &lt;a href=&quot;#tips&quot;&gt;跳到提示部分&lt;/a&gt; 图片（Images） &lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot; height=&quot;42&quot; width=&quot;42&quot;&gt; 样式/区块（Styles/Sections） &lt;style type=&quot;text/css&quot;&gt; h1 {color:red;} p {color:blue;} &lt;/style&gt; &lt;div&gt;文档中的块级元素&lt;/div&gt; &lt;span&gt;文档中的内联元素&lt;/span&gt; 无序列表 &lt;ul&gt; &lt;li&gt;项目&lt;/li&gt; &lt;li&gt;项目&lt;/li&gt; &lt;/ul&gt; 有序列表 &lt;ol&gt; &lt;li&gt;第一项&lt;/li&gt; &lt;li&gt;第二项&lt;/li&gt; &lt;/ol&gt; 定义列表 &lt;dl&gt; &lt;dt&gt;项目 1&lt;/dt&gt; &lt;dd&gt;描述项目 1&lt;/dd&gt; &lt;dt&gt;项目 2&lt;/dt&gt; &lt;dd&gt;描述项目 2&lt;/dd&gt; &lt;/dl&gt; 表格（Tables） &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;td&gt;表格数据&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 框架（Iframe） &lt;iframe src=&quot;demo_iframe.htm&quot;&gt;&lt;/iframe&gt; 表单（Forms） &lt;form action=&quot;demo_form.php&quot; method=&quot;post/get&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;email&quot; size=&quot;40&quot; maxlength=&quot;50&quot;&gt; &lt;input type=&quot;password&quot;&gt; &lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt; &lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Send&quot;&gt; &lt;input type=&quot;reset&quot;&gt; &lt;input type=&quot;hidden&quot;&gt; &lt;select&gt; &lt;option&gt;苹果&lt;/option&gt; &lt;option selected=&quot;selected&quot;&gt;香蕉&lt;/option&gt; &lt;option&gt;樱桃&lt;/option&gt; &lt;/select&gt; &lt;textarea name=&quot;comment&quot; rows=&quot;60&quot; cols=&quot;20&quot;&gt;&lt;/textarea&gt; &lt;/form&gt; 实体（Entities） &amp;lt; 等同于 &lt; &amp;gt; 等同于 &gt; &amp;#169; 等同于 ©","categories":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}],"keywords":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}]},{"title":"HTML  标准","slug":"前端/html/html","date":"2019-03-21T12:15:00.000Z","updated":"2019-03-21T19:04:31.625Z","comments":true,"path":"2019/03/21/qian-duan/html/html/","link":"","permalink":"http://yoursite.com/2019/03/21/qian-duan/html/html/","excerpt":"","text":"HTML 元素属性 &lt;!DOCTYPE html&gt;| 声明为 HTML5 文档 &lt;html&gt;| 元素是 HTML 页面的根元素 &lt;head&gt;| 元素包含了文档的元（meta）数据，定义网页编码格式为 utf-8。 &lt;title&gt;| 元素描述了文档的标题 &lt;body&gt;| 元素包含了可见的页面内容 &lt;h1&gt;| 元素定义一个大标题 &lt;p&gt;| 元素定义一个段落 &lt;html&gt;| 定义 HTML 文档 &lt;body&gt;| 定义文档的主体 &lt;base&gt; | 定义了页面链接标签的默认链接地址 &lt;link&gt; | 定义了一个文档和外部资源之间的关系 &lt;meta&gt; | 定义了HTML文档中的元数据 &lt;script&gt; | 定义了客户端的脚本文件 &lt;style&gt; |定义了HTML文档的样式文件 &lt;h1&gt; ~ &lt;h6&gt;| 定义 HTML 标题 &lt;hr&gt;| 定义水平线 &lt;a&gt;|链接 &lt;div&gt; | 定义了文档的区域，块级 (block-level) &lt;span&gt; | 用来组合文档中的行内元素， 内联元素(inline) class | 为html元素定义一个或多个类名（classname）(类名从样式文件引入) id |定义元素的唯一id style | 规定元素的行内样式（inline style） title | 描述了元素的额外信息 (作为工具条使用) &lt;!--...--&gt;| 定义注释 HTML 文本格式化 &lt;b&gt; |定义粗体文本 &lt;em&gt; | 定义着重文字 &lt;i&gt; |定义斜体字 &lt;small&gt; |定义小号字 &lt;strong&gt; | 定义加重语气 &lt;sub&gt; | 定义下标字 &lt;sup&gt; | 定义上标字 &lt;ins&gt; | 定义插入字 &lt;del&gt; | 定义删除字 HTML “计算机输出” 标签 &lt;code&gt; | 定义计算机代码 &lt;kbd&gt; | 定义键盘码 &lt;samp&gt; | 定义计算机代码样本 &lt;var&gt; | 定义变量 &lt;pre&gt; | 定义预格式文本 HTML 引文, 引用, 及标签定义 &lt;abbr&gt; | 定义缩写 &lt;address&gt; | 定义地址 &lt;bdo&gt; | 定义文字方向 &lt;blockquote&gt; | 定义长的引用 &lt;q&gt; |定义短的引用语 &lt;cite&gt; | 定义引用、引证 &lt;dfn&gt; | 定义一个定义项目。 HTMLbase元素base标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接: &lt;head&gt; &lt;base href=&quot; &quot; target=&quot;_blank&quot;&gt; &lt;/head&gt; HTMLlink元素 标签定义了文档与外部资源之间的关系。 标签通常用于链接到样式表: ``` &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &lt;/head&gt; ``` HTML style元素标签定义了HTML文档的样式文件引用地址.元素中你也可以直接添加样式来渲染 HTML 文档: ``` &lt;head&gt; &lt;style type=&quot;text/css&quot;&gt; body {background-color:yellow} p {color:blue} &lt;/style&gt; &lt;/head&gt; ``` HTML meta元素meta标签描述了一些基本的元数据。标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。 meta标签- 使用实例 --- 为搜索引擎定义关键词: 为网页定义描述内容: 定义网页作者: 每30秒钟刷新当前页面: HTML 元素 标签用于加载脚本文件，如： JavaScript。 元素在以后的章节中会详细描述。 HTML 图像- 设置图像的高度与宽度 --- height（高度） 与 width（宽度）属性用于设置图像的高度与宽度。 属性值默认单位为像素: 定义图像 定义图像地图 定义图像地图中的可点击区域 示例”创建图像映射”中的代码： 1、矩形：(左上角顶点坐标为(x1,y1)，右下角顶点坐标为(x2,y2)) 2、圆形：(圆心坐标为(X1,y1)，半径为r) 3、多边形：(各顶点坐标依次为(x1,y1)、(x2,y2)、(x3,y3) ……) HTML 表格 ---- 表格由 table 标签来定义。每个表格均有若干行（由 tr 标签定义），每行被分割为若干单元格（由 &lt;td&gt; 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。 表格实例 --- &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th colspan=&quot;2&quot;&gt;Telephone&lt;/th&gt; &lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt; &lt;th rowspan=&quot;2&quot;&gt;Telephone:&lt;/th&gt; &lt;/tr&gt; &lt;/table&gt; HTML 表格标签 --- 定义表格 定义表格的表头 定义表格的行 定义表格单元 定义表格标题 定义表格列的组 定义用于表格列的属性 定义表格的页眉 定义表格的主体 定义表格的页脚 https://c.runoob.com/codedemo/3187 HTML 列表标签 标签 描述 定义有序列表 定义无序列表 定义列表项 定义列表 自定义列表项目 定义自定列表项的描述 HTML 表单 - 输入元素 --- 多数情况下被用到的表单标签是输入标签（&lt;input&gt;）。 输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下： 文本域（Text Fields） 文本域通过 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。 First name: Last name: 密码字段- 密码字段通过标签 来定义: Password: 单选按钮（Radio Buttons） 标签定义了表单单选框选项 Male Female 复选框（Checkboxes） 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。 I have a bike I have a car 提交按钮(Submit Button) 定义了提交按钮. 当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。: Username: Volvo Saab Fiat Audi 我是一个文本框。 Personal information: Name: E-mail: Date of birth: ` HTML 表单标签 定义供用户输入的表单 定义输入域 定义文本域 (一个多行的输入控件) 定义了 元素的标签，一般为输入标题 定义了一组相关的表单元素，并使用外框包含起来 定义了 元素的标题 定义了下拉选项列表 定义选项组 定义下拉列表中的选项 定义一个点击按钮 指定一个预先定义的输入控件选项列表 定义了表单的密钥对生成器字段 定义一个计算结果 HTML 框架Iframe - 设置高度与宽度height 和 width 属性用来定义iframe标签的高度与宽度。 属性默认以像素为单位, 但是你可以指定其按比例显示 (如：”80%”)。 实例 尝试一下 » Iframe - 移除边框frameborder 属性用于定义iframe表示是否显示边框。 设置属性值为 “0” 移除iframe的边框: 实例 使用iframe来显示目标链接页面iframe可以显示一个目标链接的页面 目标链接的属性必须使用iframe的属性，如下实例: 实例 RUNOOB.COM","categories":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}],"keywords":[{"name":"html","slug":"html","permalink":"http://yoursite.com/categories/html/"}]},{"title":"Hexo-Theme-Matery <Span Style='color:yellow;font-Weight:bold;'>[加密]</span>","slug":"搭建/README","date":"2019-03-20T12:32:14.000Z","updated":"2019-03-29T18:24:27.221Z","comments":true,"path":"2019/03/20/da-jian/readme/","link":"","permalink":"http://yoursite.com/2019/03/20/da-jian/readme/","excerpt":"","text":"English Document | 演示示例 | 这是一个采用 Material Design 和响应式设计的 Hexo 博客主题。 特性 简单漂亮，文章内容美观易读 Material Design 设计 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现 首页轮播文章及每天动态切换 Banner 图片 瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替） 时间轴式的归档页 词云的标签页和雷达图的分类页 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等） 可自定义的数据的友情链接页面 支持文章置顶和文章打赏 支持 MathJax TOC 目录 可设置复制文章内容时追加版权信息 可设置阅读文章时做密码验证 Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk） 集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能 支持在首页的音乐播放和视频播放功能 音乐播放器插件 http://www.tuyiyi.com/h1.html 下载当你看到这里的时候，应该已经有一个自己的 Hexo 博客了。如果还没有的话，不妨使用 Hexo 和 Markdown 来写博客和文章。 点击 这里 下载 master 分支的最新稳定版的代码，解压缩后，将 hexo-theme-matery 的文件夹复制到你 Hexo 的 themes 文件夹中即可。 当然你也可以在你的 themes 文件夹下使用 Git clone 命令来下载: git clone https://github.com/blinkfox/hexo-theme-matery.git 配置切换主题修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery _config.yml 文件的其它修改建议: 请修改 _config.yml 的 url 的值为你的网站主 URL（如：http://xxx.github.io）。 建议修改两个 per_page 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。 如果你是中文用户，则建议修改 language 的值为 zh-CN。 新建分类 categories 页categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"categories\" 编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容： --- title: categories date: 2018-09-30 17:25:30 type: \"categories\" layout: \"categories\" --- 新建标签 tags 页tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"tags\" 编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容： --- title: tags date: 2018-09-30 18:23:38 type: \"tags\" layout: \"tags\" --- 新建关于我 about 页about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"about\" 编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容： --- title: about date: 2018-09-30 17:25:30 type: \"about\" layout: \"about\" --- 新建友情连接 friends 页（可选的）friends 页是用来展示友情连接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"friends\" 编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容： --- title: friends date: 2018-12-12 21:25:30 type: \"friends\" layout: \"friends\" --- 同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示： [{ \"avatar\": \"http://pic.netbian.com//uploads/allimg/170819/133427-150312086766a0.jpg\", \"name\": \"潭州课堂\", \"introduction\": \"和我一起玩耍\", \"url\": \"\", \"title\": \"一起去学习\" }, { \"avatar\": \"http://pic.netbian.com//uploads/allimg/170819/133427-150312086766a0.jpg\", \"name\": \"腾讯课堂\", \"introduction\": \"和我一起玩耍\", \"url\": \"\", \"title\": \"一起去学习\" }, { \"avatar\": \"http://pic.netbian.com//uploads/allimg/170819/133427-150312086766a0.jpg\", \"name\": \"慕课网\", \"introduction\": \"和我一起玩耍不\", \"url\": \"\", \"title\": \"一起去学习\" },{ \"avatar\": \"http://pic.netbian.com//uploads/allimg/170819/133427-150312086766a0.jpg\", \"name\": \"拓新教育\", \"introduction\": \"和我一起玩耍不\", \"url\": \"\", \"title\": \"一起去学习\" }] 代码高亮由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下： npm i -S hexo-prism-plugin 然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下： highlight: enable: false prism_plugin: mode: 'preprocess' # realtime/preprocess theme: 'tomorrow' line_number: false # default false custom_css: 搜索本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下： npm install hexo-generator-search --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： search: path: search.xml field: post 中文链接转拼音（可选的）如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。 安装命令如下： npm i hexo-permalink-pinyin --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： permalink_pinyin: enable: true separator: '-' # default: '-' 注：除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。 文章字数统计插件（可选的）如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。 安装命令如下： npm i --save hexo-wordcount 然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可： wordCount: enable: false # 将这个值设置为 true 即可. postWordCount: true min2read: true totalCount: true 添加 RSS 订阅支持（可选的）本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下： npm install hexo-generator-feed --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' order_by: -date 执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。 修改页脚页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。 修改社交链接在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，你可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码： &lt;a href=\"https://github.com/blinkfox\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\"> &lt;i class=\"fa fa-github\">&lt;/i> &lt;/a> 其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考： Facebook: fa-facebook Twitter: fa-twitter Google-plus: fa-google-plus Linkedin: fa-linkedin Tumblr: fa-tumblr Medium: fa-medium Slack: fa-slack 新浪微博: fa-weibo 微信: fa-wechat QQ: fa-qq 注意: 本主题中使用的 Font Awesome 版本为 4.7.0。 修改打赏的二维码图片在主题文件的 source/medias/reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。 配置音乐播放器（可选的）要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。 首先，在你的博客 source 目录下的 _data 目录（没有的话就新建一个）中新建 musics.json 文件，文件内容如下所示： [{ \"name\": \"五月雨变奏电音\", \"artist\": \"AnimeVibe\", \"url\": \"http://xxx.com/music1.mp3\", \"cover\": \"http://xxx.com/music-cover1.png\" }, { \"name\": \"Take me hand\", \"artist\": \"DAISHI DANCE,Cecile Corbel\", \"url\": \"/medias/music/music2.mp3\", \"cover\": \"/medias/music/cover2.png\" }, { \"name\": \"Shape of You\", \"artist\": \"J.Fla\", \"url\": \"http://xxx.com/music3.mp3\", \"cover\": \"http://xxx.com/music-cover3.png\" }] 注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。 然后，在主题的 _config.yml 配置文件中激活配置即可： # 是否在首页显示音乐. music: enable: true showTitle: false title: 听听音乐 fixed: false # 是否开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'list' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: # 列表最大高度 文章 Front-matter 介绍Front-matter 选项详解Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。 配置选项 默认值 描述 title Markdown 的文件标题 文章标题，强烈建议填写此选项 date 文件创建时的日期时间 发布时间，强烈建议填写此选项，且最好保证全局唯一 author 根 _config.yml 中的 author 文章作者 img featureImages 中的某个值 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpg top true 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章 cover false v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中 coverImg 无 v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 password 无 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项 toc true 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项 mathjax false 是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行 summary 无 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories 无 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 tags 无 文章标签，一篇文章可以多个标签 注意: 如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。 date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。 以下为文章的 Front-matter 示例。 最简示例--- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 --- 最全示例--- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 author: 赵奇 img: /source/images/xxx.jpg top: true cover: true coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: false mathjax: false summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories: Markdown tags: - Typora - Markdown --- 效果截图 自定制修改在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分： 菜单 我的梦想 首页的音乐播放器和视频播放器配置 是否显示推荐文章名称和按钮配置 favicon 和 Logo 个人信息 TOC 目录 文章打赏信息 复制文章内容时追加版权信息 MathJax 文章字数统计、阅读时长 点击页面的’爱心’效果 我的项目 我的技能 我的相册 Gitalk、Gitment、Valine 和 disqus 评论配置 不蒜子统计和谷歌分析（Google Analytics） 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图 我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方： 修改主题颜色在主题文件的 /source/css/matery.css 文件中，搜索 .bg-color 来修改背景颜色： /* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */ .bg-color { background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); } @-webkit-keyframes rainbow { /* 动态切换背景颜色. */ } @keyframes rainbow { /* 动态切换背景颜色. */ } 修改 banner 图和文章特色图你可以直接在 /source/medias/banner 文件夹中更换你喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 JavaScript 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 /layout/_partial/bg-cover-content.ejs 文件的 ` ` 代码中： $('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)'); 在 /source/medias/featureimages 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 _config.yml 做同步修改。 版本记录 v1.0.3 新增了TOC展开、收缩的按钮和相关配置，默认显示此按钮； v1.0.2 升级了 Materialize 框架版本为1.0.0，重构和修改了升级过程中的部分文件或问题； 新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中； 修复首页第一个按钮是中文的问题 修复了 iPhone 上点击搜索输入获取焦点的问题； 修复了 iPhone 上输入框获取焦点后页面放大的问题； 修复一些文章或 UI 显示问题； v1.0.1 调整 css、js 的文件请求路径在主题的_config.yml中配置，便于你更快捷的配置自己的 CDN； 新增代码是否折行为可配置，默认为折行； 默认激活 TOC 功能，并新增为某篇文章关闭 TOC 的 Front-matter 配置选项； 修复文章滚动时，高亮的目录选项不准确的问题； IOS下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移； v1.0.0 新增了所有基础功能；","categories":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/categories/Markdown/"}],"tags":[{"name":"设置","slug":"设置","permalink":"http://yoursite.com/tags/设置/"}],"keywords":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/categories/Markdown/"}]},{"title":"Ps快捷键","slug":"软件设计/ps/ps快捷键","date":"2019-03-16T10:16:38.000Z","updated":"2019-03-25T09:24:30.608Z","comments":true,"path":"2019/03/16/ruan-jian-she-ji/ps/ps-kuai-jie-jian/","link":"","permalink":"http://yoursite.com/2019/03/16/ruan-jian-she-ji/ps/ps-kuai-jie-jian/","excerpt":"","text":"推荐个在线编辑图片的photopea 功能和ps差不多 不用在电脑安装ps 在线就可以编辑图片 记得注册下哦！链接：https://www.photopea.com/ 注意 :进去的时候加载有些慢哈！&amp;_&amp;好的话麻烦在文章最后评论,嘻嘻嘻 1、工具箱(多种工具共用一个快捷键的可同时按【Shift】加此快捷键选取)矩形、椭圆选框工具 【M】裁剪工具 【C】移动工具 【V】套索、多边形套索、磁性套索 【L】魔棒工具 【W】喷枪工具 【J】画笔工具 【B】橡皮图章、图案图章 【S】历史记录画笔工具 【Y】橡皮擦工具 【E】铅笔、直线工具 【N】模糊、锐化、涂抹工具 【R】减淡、加深、海棉工具 【O】钢笔、自由钢笔、磁性钢笔 【P】添加锚点工具 【+】删除锚点工具 【-】直接选取工具 【A】文字、文字蒙板、直排文字、直排文字蒙板 【T】度量工具 【U】直线渐变、径向渐变、对称渐变、角度渐变、菱形渐变【G】油漆桶工具【G】吸管、颜色取样器 【I】抓手工具 【H】缩放工具 【Z】默认前景色和背景色 【D】切换前景色和背景色 【X】切换标准模式和快速蒙板模式 【Q】标准屏幕模式、带有菜单栏的全屏模式、全屏模式 【F】临时使用移动工具 【Ctrl】临时使用吸色工具 【Alt】临时使用抓手工具 【空格】打开工具选项面板 【Enter】快速输入工具选项(当前工具选项面板中至少有一个可调节数字) 【0】至【9】循环选择画笔 【[】或【]】选择第一个画笔 【Shift】+【[】选择最后一个画笔 【Shift】+【]】建立新渐变(在”渐变编辑器”中) 【Ctrl】+【N】 2、文件操作新建图形文件【Ctrl】+【N】新建图层【Ctrl】+【Shift】+【N】用默认设置创建新文件 【Ctrl】+【Alt】+【N】打开已有的图像 【Ctrl】+【O】打开为… 【Ctrl】+【Alt】+【O】关闭当前图像 【Ctrl】+【W】保存当前图像 【Ctrl】+【S】另存为… 【Ctrl】+【Shift】+【S】存储副本 【Ctrl】+【Alt】+【S】页面设置 【Ctrl】+【Shift】+【P】打印 【Ctrl】+【P】打开“预置”对话框 【Ctrl】+【K】显示最后一次显示的“预置”对话框 【Alt】+【Ctrl】+【K】设置“常规”选项(在预置对话框中) 【Ctrl】+【1】设置“存储文件”(在预置对话框中) 【Ctrl】+【2】设置“显示和光标”(在预置对话框中) 【Ctrl】+【3】设置“透明区域与色域”(在预置对话框中) 【Ctrl】+【4】设置“单位与标尺”(在预置对话框中) 【Ctrl】+【5】设置“参考线与网格”(在预置对话框中) 【Ctrl】+【6】外发光效果(在”效果”对话框中) 【Ctrl】+【3】内发光效果(在”效果”对话框中) 【Ctrl】+【4】斜面和浮雕效果(在”效果”对话框中) 【Ctrl】+【5】应用当前所选效果并使参数可调(在”效果”对话框中) 【A】 3、图层混合循环选择混合模式【Alt】+【-】或【+】正常 【Shift】+【Alt】+【N】阈值（位图模式） 【Shift】+【Alt】+【L】溶解 【Shift】+【Alt】+【I】背后 【Shift】+【Alt】+【Q】清除 【Shift】+【Alt】+【R】正片叠底 【Shift】+【Alt】+【M】屏幕 【Shift】+【Alt】+【S】叠加 【Shift】+【Alt】+【O】柔光 【Shift】+【Alt】+【F】强光 【Shift】+【Alt】+【H】滤色 【Shift】+【Alt】+【S】颜色减淡 【Shift】+【Alt】+【D】颜色加深 【Shift】+【Alt】+【B】变暗 【Shift】+【Alt】+【K】变亮 【Shift】+【Alt】+【G】差值 【Shift】+【Alt】+【E】排除 【Shift】+【Alt】+【X】色相 【Shift】+【Alt】+【U】饱和度 【Shift】+【Alt】+【T】颜色 【Shift】+【Alt】+【C】光度 【Shift】+【Alt】+【Y】去色 海棉工具+【Shift】+【Alt】+【J】加色 海棉工具+【Shift】+【Alt】+【A】暗调 减淡/加深工具+【Shift】+【Alt】+【W】中间调 减淡/加深工具+【Shift】+【Alt】+【V】高光减淡/加深工具+【Shift】+【Alt】+【Z】 4、选择功能全部选取 【Ctrl】+【A】取消选择 【Ctrl】+【D】重新选择 【Ctrl】+【Shift】+【D】羽化选择 【Ctrl】+【Alt】+【D】反向选择 【Ctrl】+【Shift】+【I】路径变选区 数字键盘的【Enter】载入选区 【Ctrl】+点按图层、路径、通道面板中的缩约图滤镜按上次的参数再做一次上次的滤镜 【Ctrl】+【F】退去上次所做滤镜的效果 【Ctrl】+【Shift】+【F】重复上次所做的滤镜(可调参数) 【Ctrl】+【Alt】+【F】选择工具(在“3D变化”滤镜中) 【V】立方体工具(在“3D变化”滤镜中) 【M】球体工具(在“3D变化”滤镜中) 【N】柱体工具(在“3D变化”滤镜中) 【C】轨迹球(在“3D变化”滤镜中) 【R】全景相机工具(在“3D变化”滤镜中) 【E】 5、视图操作显示彩色通道 【Ctrl】+【~】显示单色通道 【Ctrl】+【数字】显示复合通道 【~】以CMYK方式预览(开) 【Ctrl】+【Y】打开/关闭色域警告 【Ctrl】+【Shift】+【Y】放大视图 【Ctrl】+【+】缩小视图 【Ctrl】+【-】满画布显示 【Ctrl】+【0】实际象素显示 【Ctrl】+【Alt】+【0】向上卷动一屏 【PageUp】向下卷动一屏 【PageDown】向左卷动一屏 【Ctrl】+【PageUp】向右卷动一屏 【Ctrl】+【PageDown】向上卷动10 个单位 【Shift】+【PageUp】向下卷动10 个单位 【Shift】+【PageDown】向左卷动10 个单位 【Shift】+【Ctrl】+【PageUp】向右卷动10 个单位 【Shift】+【Ctrl】+【PageDown】将视图移到左上角 【Home】将视图移到右下角 【End】显示/隐藏选择区域 【Ctrl】+【H】显示/隐藏路径 【Ctrl】+【Shift】+【H】显示/隐藏标尺 【Ctrl】+【R】显示/隐藏参考线 【Ctrl】+【;】显示/隐藏网格 【Ctrl】+【”】贴紧参考线 【Ctrl】+【Shift】+【;】锁定参考线 【Ctrl】+【Alt】+【;】贴紧网格 【Ctrl】+【Shift】+【”】显示/隐藏“画笔”面板 【F5】显示/隐藏“颜色”面板 【F6】显示/隐藏“图层”面板 【F7】显示/隐藏“信息”面板 【F8】显示/隐藏“动作”面板 【F9】显示/隐藏所有命令面板 【TAB】显示或隐藏工具箱以外的所有调板 【Shift】+【TAB】文字处理(在”文字工具”对话框中)左对齐或顶对齐 【Ctrl】+【Shift】+【L】中对齐 【Ctrl】+【Shift】+【C】右对齐或底对齐 【Ctrl】+【Shift】+【R】左/右选择 1 个字符 【Shift】+【←】/【→】下/上选择 1 行 【Shift】+【↑】/【↓】选择所有字符 【Ctrl】+【A】选择从插入点到鼠标点按点的字符 【Shift】加点按左/右移动 1 个字符 【←】/【→】下/上移动 1 行 【↑】/【↓】左/右移动1个字 【Ctrl】+【←】/【→】将所选文本的文字大小减小2 点象素 【Ctrl】+【Shift】+【&lt;】将所选文本的文字大小增大2 点象素 【Ctrl】+【Shift】+【&gt;】将所选文本的文字大小减小10 点象素 【Ctrl】+【Alt】+【Shift】+【&lt;】将所选文本的文字大小增大10 点象素 【Ctrl】+【Alt】+【Shift】+【&gt;】将行距减小2点象素 【Alt】+【↓】将行距增大2点象素 【Alt】+【↑】将基线位移减小2点象素 【Shift】+【Alt】+【↓】将基线位移添加2点象素 【Shift】+【Alt】+【↑】将字距微调或字距调整减小20/1000ems 【Alt】+【←】将字距微调或字距调整添加20/1000ems 【Alt】+【→】将字距微调或字距调整减小100/1000ems 【Ctrl】+【Alt】+【←】将字距微调或字距调整添加100/1000ems 【Ctrl】+【Alt】+【→】设置“增效工具与暂存盘”(在预置对话框中) 【Ctrl】+【7】设置“内存与图像高速缓存”(在预置对话框中) 【Ctrl】+【8】 6、编辑操作还原/重做前一步操作【Ctrl】+【Z】还原两步以上操作 【Ctrl】+【Alt】+【Z】重做两步以上操作 【Ctrl】+【Shift】+【Z】剪切选取的图像或路径 【Ctrl】+【X】或【F2】拷贝选取的图像或路径 【Ctrl】+【C】合并拷贝 【Ctrl】+【Shift】+【C】将剪贴板的内容粘到当前图形中 【Ctrl】+【V】或【F4】将剪贴板的内容粘到选框中 【Ctrl】+【Shift】+【V】自由变换 【Ctrl】+【T】应用自由变换(在自由变换模式下) 【Enter】从中心或对称点开始变换 (在自由变换模式下) 【Alt】限制(在自由变换模式下) 【Shift】扭曲(在自由变换模式下) 【Ctrl】取消变形(在自由变换模式下) 【Esc】自由变换复制的象素数据 【Ctrl】+【Shift】+【T】再次变换复制的象素数据并建立一个副本 【Ctrl】+【Shift】+【Alt】+【T】删除选框中的图案或选取的路径 【DEL】用背景色填充所选区域或整个图层 【Ctrl】+【BackSpace】或【Ctrl】+【Del】用前景色填充所选区域或整个图层 【Alt】+【BackSpace】或【Alt】+【Del】弹出“填充”对话框 【Shift】+【BackSpace】或【shift】+【F5】从历史记录中填充 【Alt】+【Ctrl】+【Backspace】 7、图像调整调整色阶 【Ctrl】+【L】自动调整色阶 【Ctrl】+【Shift】+【L】打开曲线调整对话框 【Ctrl】+【M】在所选通道的曲线上添加新的点(‘曲线’对话框中) 在图象中【Ctrl】加点按在复合曲线以外的所有曲线上添加新的点(‘曲线’对话框中) 【Ctrl】+【Shift】 8、加点按移动所选点(‘曲线’对话框中) 【↑】/【↓】/【←】/【→】以10点为增幅移动所选点以10点为增幅(‘曲线’对话框中) 【Shift】+【箭头】选择多个控制点(‘曲线’对话框中) 【Shift】加点按前移控制点(‘曲线’对话框中) 【Ctrl】+【Tab】后移控制点(‘曲线’对话框中) 【Ctrl】+【Shift】+【Tab】添加新的点(‘曲线’对话框中) 点按网格删除点(‘曲线’对话框中) 【Ctrl】加点按点取消选择所选通道上的所有点(‘曲线’对话框中) 【Ctrl】+【D】使曲线网格更精细或更粗糙(‘曲线’对话框中) 【Alt】加点按网格选择彩色通道(‘曲线’对话框中) 【Ctrl】+【~】选择单色通道(‘曲线’对话框中) 【Ctrl】+【数字】打开“色彩平衡”对话框 【Ctrl】+【B】打开“色相/饱和度”对话框 【Ctrl】+【U】全图调整(在色相/饱和度”对话框中) 【Ctrl】+【~】只调整红色(在色相/饱和度”对话框中) 【Ctrl】+【1】只调整黄色(在色相/饱和度”对话框中) 【Ctrl】+【2】只调整绿色(在色相/饱和度”对话框中) 【Ctrl】+【3】只调整青色(在色相/饱和度”对话框中) 【Ctrl】+【4】只调整蓝色(在色相/饱和度”对话框中) 【Ctrl】+【5】只调整洋红(在色相/饱和度”对话框中) 【Ctrl】+【6】去色 【Ctrl】+【Shift】+【U】反相 【Ctrl】+【I】 9、图层操作从对话框新建一个图层 【Ctrl】+【Shift】+【N】以默认选项建立一个新的图层 【Ctrl】+【Alt】+【Shift】+【N】通过拷贝建立一个图层 【Ctrl】+【J】通过剪切建立一个图层 【Ctrl】+【Shift】+【J】与前一图层编组 【Ctrl】+【G】取消编组 【Ctrl】+【Shift】+【G】向下合并或合并联接图层 【Ctrl】+【E】合并可见图层 【Ctrl】+【Shift】+【E】盖印或盖印联接图层 【Ctrl】+【Alt】+【E】盖印可见图层【Ctrl】+【Alt】+【Shift】+【E】将当前层下移一层 【Ctrl】+【[】将当前层上移一层 【Ctrl】+【]】将当前层移到最下面 【Ctrl】+【Shift】+【[】将当前层移到最上面 【Ctrl】+【Shift】+【]】激活下一个图层 【Alt】+【[】激活上一个图层 【Alt】+【]】激活底部图层 【Shift】+【Alt】+【[】激活顶部图层 【Shift】+【Alt】+【]】调整当前图层的透明度(当前工具为无数字参数的,如移动工具) 【0】至【9】保留当前图层的透明区域(开关) 【/】投影效果(在”效果”对话框中) 【Ctrl】+【1】内阴影效果(在”效果”对话框中) 【Ctrl】+【2】F1 -帮助F2 -剪切F3 -拷贝F4-粘贴F5-隐藏/显示画笔面板F6-隐藏/显示颜色面板F7-隐藏/显示图层面板F8-隐藏/显示信息面板F9-隐藏/显示动作面板F12-恢复Shift+f5-填充Shift+f6-羽化Shift+f7-选择→反选ctrl+h-隐藏选定区域ctrl+d-取消选定区域ctrl+w-关闭文件ctrl+Q-退出ps 10、取消操作 1.按Tab键可以显示或隐藏工具箱和调色板，按”shift+Tab”键可以显示或隐藏除工具以外的其他面板。 2.按住shift用绘画工具在画面点击就可以在每两点间画出直线，按住鼠标拖动便可画出水平或垂直线。 3.使用其他工具时，按住ctrl键可切换到move工具的功能（除了选择hand工具时）按住空格键可切换到hand工具的功能。 4.同时按住alt和ctrl+或-可让画框与画面同时缩放。 5.使用其他工具时，按ctrl+空格键可切换到zoom in工具放大图象显示比例，按alt+ctrl+空格可切换到zoomout工具缩小图象显示比例。 6.在hand工具上双击鼠标可以使图象匹配窗口的大小显示。 7.按住alt双击ps底板相当于open as。 8.按住shife双击ps底板相当于save。 9.按住ctrl双击ps底板相当于new file。 10.按住ale点击工具盒中带小点的工具可循环选择隐藏的工具。 11.按ctrl+alt+{数字键0}或在zoom工具上双击鼠标可使图象文件以1：1比例显示。 12.在各种设置框内，只要按住alt键，cancel键会变成键reset键，按reset键变可恢复默认设置。 13.按shift+backspace键可直接调用fill填充对话框。 14.按alt+backspace(delete)键可将前景色填入选取框按ctrl+backspace(delete)键可将背景色填入选取框。 15.同时按住ctrl和alt移动可马上复制到新的layer并可同时移动物体。 16.再用裁切工具裁切图片并调整裁切点时按住ctrl便不会贴近画面边缘。 17.若要在一个宏(action)中的某一命令后新增一条命令,可以先选中该命令,然后单击调色板上的开始录制(beginrecording)图标,选择要添加的命令,再单击停止录制(stop recording)图标即可。 18.在layers,channels,paths面板上,按alt单击,按单击这些面板底部的工具图标时,对于有对话的工19.在使用filter→render→lightingeffectts滤镜时,若要在对话框内复制光源,可先按住alt键后再拖动光源即可实现复制。 20.按住shift加上tab键可以显示或隐藏除工具 箱外的其他调色板 21.调用curves对话框时,按住键于格线内单击鼠标可以添加网格线,提高曲线精度。 22.若要在两上窗口间拖放拷贝,拖动过程中按住shift键,图像拖动到目的窗口后会自动居中。 23.按住shift选择区域时可在原区域上添加新的区域;按住alt选择区域时,可在原区域上减去新选区域,同时按住shift和alt选择区域时,可取得与原选择区域相交的部分 24.移动图层和选取框时,按住shift键可做水平,垂直或45度角的移动,按键盘上的方向键,可做每次1像素的移动,按住shift键再键盘上的方向键可做每次10像素的移动。 25.使用笔形工具制作路径是按住shift键可以强制路径或方向线成水平或垂直或45度角按住ctrl键可暂时切换到路径选取工具按住alt键将笔形光标在黑色的接点上单击可以改变方向线的方向，使曲线可以转折；按alt键用路径选取(directselection)工具单击路径会选取整个路径，要同时选取多个路径可按住shift后逐个单击，用路径选取工具是按住ctrl+alt键移近路径会切换到加节点与件节点的笔行工具。 26.在使用选取工具时,按shift键拖动鼠标可以在原选取框外添加选取范围;同时按shift与alt键拖动鼠标可以选取与原选取框重叠的范围(交集)。 27.ctrl+delete加填前景颜色,ctrl或shift加delete填背景颜色。 28.空格加ctrl(注意顺序)快速调出放大镜, 再加alt变成缩小镜。 29.若要将图像用于网面上,可将图像模式设置为indexed color索引色彩模式,有文件小,传输快的优点, 如果再选择gif89aexport(gif输出),可以设置透明的效果,并将文件保存成gif格式。 30.使用filter→render→clouds滤镜时,先按住alt可加云彩的反差,先按住shift键则降低反差 。 31.双击放大镜可使画面以的100%比例显示大小。 32.按ctrl+r 出现标尺,在标尺拉出辅助线时按住就可以准确的让辅助线贴近刻度。 33.在使用自由变形(layer→free→transform)功能时,按ctrl键并拖动某一控制点可以进行随意变形的调整,”shift+ctrl”键并拖动某一控制点可以时行倾斜调整;按alt键并拖动某一控制点可以进行对称调整;按shift+ctrl+alt键并拖动某一控制点可以进行透视效果的调整。 34.在ps5.0以上版本中右键点击文字,在layer选effects…可快速做出随字体改变的阴影及光芒效果。 35.在安装ps的时候在select country中选择all other countries;在selectcomponents中确定选择了cmap files;这样安装完后,您的ps就可以正常使用中文了。 36.在ps5.0中在history控制面板中点右上角的小三角选clearhistory可以暂时缓解你对虚拟内存的要求。 37.在使用filter→render→clouds滤镜时,若要产生更多明显的纹理图案,可先按住alt键后再执行该命令。 38.大部分工具在使用时按caps lock键可使工具图标与精 确十线相互切换。 39.按f键可把ps面板的显示模式顺序替换为:标准显示 带菜单的全屏显示 全屏显示。 40.想从中心开始画选框可按住alt拖动。 11、工作界面启动后，就进入ps的工作界面了，由以下几部分组成:标题栏：位于主窗口顶端，最左边是ps标记，右边分别是最小化、最大化/还原和关闭按钮。属性栏(又称工具选项栏)：选中某个工具后，属性栏就会改变成相应工具的属性设置选项，可更改相应的选项。菜单栏：菜单栏为整个环境下所有窗口提供菜单控制，包括:文件、编辑、图像、图层、选择、滤镜、视图、窗口和帮助九项。ps中通过两种方式执行所有命令，一是菜单，二是快捷键。图像编辑窗口：中间窗口是图像窗口，它是ps的主要工作区，用于显示图像文件。图像窗口带有自己的标题栏，提供了打开文件的基本信息，如文件名、缩放比例、颜色模式等。如同时打开两副图像，可通过单击图像窗口进行切换。图像窗口切换可使用Ctrl+Tab状态栏：主窗口底部是状态栏，由三部分组成:(1)最右边的是文本行，说明当前所选工具和所进行操作 的功能与作用等信息。 (2)左边是缩放栏，显示当前图像窗口的显示比例，用户也可在此窗口中输入数值后按回车来改变显示比例。(3)中间是预览框，单击右边的黑色三角按扭，打开弹出菜单，选择任一命令，相应的信息就会在预览框中显示。文档大小:表示当前显示的是图像文件尺寸。左边的数字表示该图像不含任何图层和通道等数据情况下的尺寸，右侧的数字表示当前图像的全部文件尺寸。文档配置文件:在状态栏上将显示文件的颜色模式文档尺寸:在状态档上将显示文档的大小(宽度和高度)。 暂存盘大小:已用和可用内存大小。效率:代表ps的工作效率。低于60%则表示计算机硬盘可能已无法满足要求。计时:执行上一次操作所花费的时间。当前工具:当前选中的工具。 工具栏工具箱：工具箱中的工具可用来选择、绘画、编辑以及查看图像。拖动工具箱的标题栏，可移动工具箱。单击可选中工具，属性栏会显示该工具的属性。有些工具的右下角有一个小三角形符号，这表示在工具位置上存在一个工具组，其中包括若干个相关工具。控制面板：共有14个面板，可通过“窗口/显示”来显示面板。按Tab键，自动隐藏命令面板，属性栏和工具箱，再次按键，显示以上组件。按Shift+Tab，隐藏控制面板，保留工具箱 选框-Marquee(M) 移动-move(V) 套索-Lasso(L) 魔棒-Wand(W) 喷枪-injection lance (J) 画笔-Brush (B) 铅笔-pencil(N) 橡皮图章-rubbr-stamp(s) 历史记录画笔-history brush tool (Y) 橡皮擦-Erasers (E) 模糊-Blur (R) 减淡- dodge tool (O) 钢笔-pen (P) 文字-text (T) 度量-measurement (U) 渐变-Gradient (G) 油漆桶-Paint Bucket Tool (K) 吸管- suction tube (I) 抓手-hand grip (H) 缩放-Zoom (Z) 默认前景和背景色-The default foreground and background color (D) 切换前景和背景色-Switch foreground and background color (X) 编辑模式切换-Edit mode switching (Q) 显示模式切换-F Cycle through Screen Modes (F) 一、File－（文件）1.New－（新建）2.Open－（打开）3.Open As－（打开为）4.Open Recent－（最近打开文件）5.Close－（关闭）6.Save－（存储）7.Save As－（存储为）8.Save for Web－（存储为Web所用格式）9.Revert－（恢复）10.Place－（置入）11.Import－（输入）－（1）PDF Image－（2）Annotations－（注释）12.Export－（输出）13.Manage Workflow－（管理工作流程）－（1）Check In－（登记）－（2）Undo Check Out－（还原注销）－（3）Upload To Server－（上载到服务器）－（4）Add To Workflow－（添加到工作流程）－（5）Open From Workflow－（从工作流程打开）14.Automate－（自动）－（1）Batch－（批处理）－（2）Create Droplet－（创建快捷批处理）－（3）Conditional Mode Change－（条件模式更改）－（4）Contact Sheet－（联系表）－（5）Fix Image－（限制图像）－（6）Multi－（7）Picture package－（图片包）－（8）Web Photo Gallery15.File Info－（文件简介）16.Print Options－（打印选项）17.Page Setup－（页面设置）18.Print－（打印）19.Jump to－（跳转到）20.Exit－（退出） 二、Edit－（编辑）1.Undo－（还原）2.Step Forward－（向前）3.Step Backward－（返回）4.Fade－（消退）5.Cut－（剪切）6.Copy－（拷贝）7.Copy Merged－（合并拷贝）8.Paste－（粘贴）9.Paste Into－（粘贴入）10.Clear－（清除）11.Fill－（填充）12.Stroke－（描边）13.Free Transform－（自由变形）14.Transform－（变换）－（1）Again－（再次）－（2）Sacle－（缩放）－（3）Rotate－（旋转）－（4）Skew－（斜切）－（5）Distort－（扭曲）－（6）Prespective－（透视）－（7）Rotate 180°－（旋转180度）－（8）Rotate 90°CW－（顺时针旋转90度）－（9）Rotate 90°CCW－（逆时针旋转90度）－（10） Flip Hpeizontal－（水平翻转）－（11） Flip Vertical－（垂直翻转）15.Define Brush－（定义画笔）16.Define Pattern－（设置图案）17.Define Custom Shape－（定义自定形状）18.Purge－（清除内存数据）－（1） Undo－（还原）－（2） Clipboard－（剪贴板）－（3） Histories－（历史纪录）－（4） All－（全部）19.Color Settings－（颜色设置）20.Preset Manager－（预置管理器）21.Preferences－（预设）－（1） General－（常规）－（2） Saving Files－（存储文件）－（3） Display 三、Image－（图像）1.Mode－（模式）－（1） Bitmap－（位图）－（2） Grayscale－（灰度）－（3） Duotone－（双色调）－（4） Indexed Color－（索引色）－（5） RGB Color－（6） CMYK Color－（7） Lab Color－（8） Multichannel－（多通道）－（9） 8 Bits/Channel－（8位通道）－（10） 16 Bits/Channel－（16位通道）－（11） Color Table－（颜色表）－（12）Assing Profile－（制定配置文件）－（13）Convert to Profile－（转换为配置文件）2.Adjust－（调整）－（1） Levels－（色阶））－（2） Auto Laves－（自动色阶）－（3） Auto Contrast－（自动对比度）－（4） Curves－（曲线））－（5） Color Balance－（色彩平衡）－（6） Brightness/Contrast－（亮度/对比度）－（7） Hue/Saturation－（色相/饱和度）－（8） Desaturate－（去色）－（9） Replace Color－（替换颜色）－（10） Selective Color－（可选颜色）－（11） Channel Mixer－（通道混合器）－（12） Gradient Map－（渐变映射）－（13） Invert－（反相）－（14） Equalize－（色彩均化）－（15） Threshold－（阈值）－（16） Posterize－（色调分离）－（17） Variations－（变化）3.Duplicate－（复制）4.Apply Image－（应用图像）5.Calculations－（计算）6.Image Size－（图像大小）7.Canvas Size－（画布大小）8.Rotate Canvas－（旋转画布）－（1） 180°－（180度）－（2） 90°CW－（顺时针90度）－（3） 90°CCW－（逆时针90度）－（4） Arbitrary－（任意角度）－（5） Flip Horizontal－（水平翻转）－（6） Flip Vertical－（垂直翻转）9.Crop－（裁切）10.Trim－（修整）11.Reverl All－（显示全部）12.Histogram－（直方图）13.Trap－（陷印）14.Extract－（抽出）15.Liquify－（液化） 四、Layer－（图层）1.New－（新建）－（1） Layer－（图层）－（2） Background From Layer－（背景图层）－（3） Layer Set－（图层组）－（4） Layer Set From Linked－（图层组来自链接的）－（5） Layer via Copy－（通过拷贝的图层）－（6） Layer via Cut－（通过剪切的图层）2.Duplicate Layer－（复制图层）3.Delete Layer－（删除图层）4.Layer Properties－（图层属性）5.Layer Style－（图层样式）－（1） Blending Options－（混合选项）－（2） Drop Shadow－（投影）－（3） Inner Shadow－（内阴影）－（4） Outer Glow－（外发光）－（5） Inner Glow－（内发光）－（6） Bevel and Emboss－（斜面和浮雕）－（7） Satin－（光泽）－（8） Color Overlay－（颜色叠加）－（9） Gradient Overlay－（渐变叠加）－（10） Pattern Overlay－（图案叠加）－（11） Stroke－（描边）－（12） Copy Layer Effects－（拷贝图层样式）－（13） Paste Layer Effects－（粘贴图层样式）－（14） Paste Layer Effects To Linked－（将图层样式粘贴的链接的）－（15） Clear Layer Effects－（清除图层样式）－（16） Global Light－（全局光）－（17） Create Layer－（创建图层）－（18） Hide All Effects－（显示/隐藏全部效果）－（19） Scale Effects－（缩放效果）6.New Fill Layer－（新填充图层）－（1） Solid Color－（纯色）－（2） Gradient－（渐变）－（3） Pattern－（图案）7.New Adjustment Layer－（新调整图层）－（1）Levels－（色阶）－（2）Curves－（曲线）－（3）Color Balance－（色彩平衡）－（4）Brightness/Contrast－（亮度/对比度）－（5）Hue/Saturation－（色相/饱和度）－（6）Selective Color－（可选颜色）－（7）Channel Mixer－（通道混合器）－（8）Gradient Map－（渐变映射）－（9）Invert－（反相）－（10）Threshold－（阈值）－（11）Posterize－（色调分离）8.Change Layer Content－（更改图层内容）9.Layer Content Options－（图层内容选项）10.Type－（文字）－（1） Create Work Path－（创建工作路径）－（2） Convert to Shape－（转变为形状）－（3） Horizontal－（水平）－（4） Vertical－（垂直）－（5） Anti-Alias None－（消除锯齿无）－（6） Anti-Alias Crisp－（消除锯齿明晰）－（7） Anti-Alias Strong－（消除锯齿强）－（8） Anti-Alias Smooth－（消除锯齿平滑）－（9） Covert To Paragraph Text－（转换为段落文字）－（10） Warp Text－（文字变形）－（11）Update All Text Layers－（更新所有文本图层）－（12）Replace All Missing Fonts－（替换所以缺欠文字）11.Rasterize－（栅格化）－（1）Type－（文字）－（2）Shape－（形状）－（3）Fill Content－（填充内容）－（4）Layer Clipping Path－（图层剪贴路径）－（5）Layer－（图层）－（6）Linked Layers－（链接图层）－（7）All Layers－（所有图层）12.New Layer Based Slice－（基于图层的切片）13.Add Layer Mask－（添加图层蒙板）－（1） Reveal All－（显示全部）－（2） Hide All－（隐藏全部）－（3） Reveal Selection－（显示选区）－（4） Hide Selection－（隐藏选区）14.Enable Layer Mask－（启用图层蒙板）15.Add Layer Clipping Path－（添加图层剪切路径）－（1）Reveal All－（显示全部）－（2）Hide All－（隐藏全部）－（3）Current Path－（当前路径）16.Enable Layer Clipping Path－（启用图层剪切路径）17.Group Linked－（于前一图层编组）18.UnGroup－（取消编组）19.Arrange－（排列）－（1） Bring to Front－（置为顶层）－（2） Bring Forward－（前移一层）－（3） Send Backward－（后移一层）－（4） Send to Back－（置为底层）20.Arrange Linked－（对齐链接图层）－（1） Top Edges－（顶边）－（2） Vertical Center－（垂直居中）－（3） Bottom Edges－（底边）－（4） Left Edges－（左边）－（5） Horizontal Center－（水平居中）－（6） Right Edges－（右边）21.Distribute Linked－（分布链接的）－（1） Top Edges－（顶边）－（2） Vertical Center－（垂直居中）－（3） Bottom Edges－（底边）－（4） Left Edges－（左边）－（5） Horizontal Center－（水平居中）－（6） Right Edges－（右边）22.Lock All Linked Layers－（锁定所有链接图层）23.Merge Linked－（合并链接图层）24.Merge Visible－（合并可见图层）25.Flatten Image－（合并图层）26.Matting－（修边）－（1） Define－（去边）－（2） Remove Black Matte－（移去黑色杂边）－（3） Remove White Matte－（移去白色杂边） 五、Selection－（选择）1.All－（全部）2.Deselect－（取消选择）3.Reselect－（重新选择）4.Inverse－（反选）5.Color Range－（色彩范围）6.Feather－（羽化）7.Modify－（修改）－（1） Border－（扩边）－（2） Smooth－（平滑）－（3） Expand－（扩展）－（4） Contract－（收缩）8.Grow－（扩大选区）9.Similar－（选区相似）10.Transform Selection－（变换选区）11.Load Selection－（载入选区）12.Save Selection－（存储选区） 六、Filter－（滤镜）1.LastFilter－（上次滤镜操作）2.Artistic－（艺术效果）－（1） Colored Pencil－（彩色铅笔）－（2） Cutout－（剪贴画）－（3） Dry Brush－（干笔画）－（4） Film Grain－（胶片颗粒）－（5） Fresco－（壁画）－（6） Neon Glow－（霓虹灯光）－（7） Paint Daubs－（涂抹棒）－（8） Palette Knife－（调色刀）－（9） Plastic Wrap－（塑料包装）－（10） Poster Edges－（海报边缘）－（11） Rough Pastels－（粗糙彩笔）－（12） Smudge Stick－（绘画涂抹）－（13） Sponge－（海绵）－（14） Underpainting－（底纹效果）－（15） Watercolor－（水彩）3.Blur－（模糊）－（1） Blur－（模糊）－（2） Blur More－（进一步模糊）－（3） Gaussian Blur－（高斯模糊）－（4） Motion Blur－（动态模糊）－（5） Radial Blur－（径向模糊）－（6） Smart Blur－（特殊模糊）4.Brush Strokes－（画笔描边）－（1） Accented Edges－（强化边缘）－（2） Angled Stroke－（成角的线条）－（3） Crosshatch－（阴影线）－（4） Dark Strokes－（深色线条）－（5） Ink Outlines－（油墨概况）－（6） Spatter－（喷笔）－（7） Sprayed Strokes－（喷色线条）－（8） Sumi5.Distort－（扭曲）－（1） Diffuse Glow－（扩散亮光）－（2） Displace－（置换）－（3） Glass－（玻璃）－（4） Ocean Ripple－（海洋波纹）－（5） Pinch－（挤压）－（6） Polar Coordinates－（极坐标）－（7） Ripple－（波纹）－（8） Shear－（切变）－（9） Spherize－（球面化）－（10） Twirl－（旋转扭曲）－（11） Wave－（波浪）－（12） Zigzag－（水波）6.Noise－（杂色）－（1） Add Noise－（加入杂色）－（2） Despeckle－（去斑）－（3） Dust 七、View－（视图）1.NewView－（新视图）2.Proof Setup－（校样设置）－（1）Custom－（自定）－（2）Working CMYK－（处理CMYK）－（3）Working Cyan Plate－（处理青版）－（4）Working Magenta Plate－（处理洋红版）－（5）Working Yellow Plate－（处理黄版）－（6）Working Black Plate－（处理黑版）－（7）Working CMY Plate－（处理CMY版）－（8）Macintosh RGB－（9）Windows RGB－（10）Monitor RGB－（显示器RGB）－（11）Simulate Paper White－（模拟纸白）－（12）Simulate Ink Black－（模拟墨黑）3.Proof Color－（校样颜色）4.Gamut Wiring－（色域警告）5.Zoom In－（放大）6.Zoom Out－（缩小）7.Fit on Screen－（满画布显示）8.Actual Pixels－（实际象素）9.Print Size－（打印尺寸）10.Show Extras－（显示额外的）11.Show－（显示）－（1） Selection Edges－（选区边缘）－（2） Target Path－（目标路径）－（3） Grid－（网格）－（4） Guides－（参考线）－（5） Slices－（切片）－（6） Notes－（注释）－（7） All－（全部）－（8） None－（无）－（9）Show Extras Options－（显示额外选项）12.Show Rulers－（显示标尺）13.Snap－（对齐）14.Snap To－（对齐到）－（1） Guides－（参考线）－（2） Grid－（网格）－（3） Slices－（切片）－（4） Document Bounds－（文档边界）－（5） All－（全部）－（6） None－（无）15.Show Guides－（锁定参考线）16.Clear Guides－（清除参考线）17.New Guides－（新参考线）18.Lock Slices－（锁定切片）19.Clear Slices－（清除切片） 八、Windows－（窗口）1.Cascade－（层叠）2.Tile－（拼贴）3.Arrange Icons－（排列图标）4.Close All－（关闭全部）5.Show/Hide Tools－（显示/隐藏工具）6.Show/Hide Options－（显示/隐藏选项）7.Show/Hide Navigator－（显示/隐藏导航）8.Show/Hide Info－（显示/隐藏信息）9.Show/Hide Color－（显示/隐藏颜色）10.Show/Hide Swatches－（显示/隐藏色板）11.Show/Hide Styles－（显示/隐藏样式）12.Show/Hide History－（显示/隐藏历史记录）13.Show/Hide Actions－（显示/隐藏动作）14.Show/Hide Layers－（显示/隐藏图层）15.Show/Hide Channels－（显示/隐藏通道）16.Show/Hide Paths－（显示/隐藏路径）17.Show/Hide Character－（显示/隐藏字符）18.Show/Hide Paragraph－（显示/隐藏段落）19.Show/Hide Status Bar－（显示/隐藏状态栏）20.Reset Palette Locations－（复位调板位置）CTRL+T（自由变换） CTRL+J（复制图层） CTRL+G（建组）CTRL+ALT+T（复制并变换） SHIFT+CTRL+ALT+T（三键组合T出N个线条）CTRL+E（合并图层） CTRL+H（调出参考线或隐藏参考线）CTRL+D（取消选择） SHIFT+CTRL+J（新建通过剪切的图层）CTRL+图层缩略图（将图层载入选区）CRTL+创建新图层（在点蓝的图层下面创建一个新的图层）","categories":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}],"tags":[{"name":"设计类","slug":"设计类","permalink":"http://yoursite.com/tags/设计类/"},{"name":"ps","slug":"ps","permalink":"http://yoursite.com/tags/ps/"}],"keywords":[{"name":"设计","slug":"设计","permalink":"http://yoursite.com/categories/设计/"}]},{"title":"域名绑定","slug":"搭建/域名绑定","date":"2019-03-15T14:46:11.000Z","updated":"2019-03-16T10:28:46.821Z","comments":true,"path":"2019/03/15/da-jian/yu-ming-bang-ding/","link":"","permalink":"http://yoursite.com/2019/03/15/da-jian/yu-ming-bang-ding/","excerpt":"","text":"##1.第一种2情况Your site is ready to be published at 域名 检查你的域名解析 ping 地址 2.更改hosts文件，地址：C:\\Windows\\System32\\Drivers\\etc 不能直接修改，将其拷贝到桌面，进行修改后，再复制到文件目录下（直接替换） 在hosts文件中添加： ``` #github ip地址 github.com ip地址 github.global.ssl.fastly.net ``` 3.如果上述步骤还不可以，可以刷新一下缓存： 打开cmd输入ipconfig /flushdns刷新缓存","categories":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}],"tags":[{"name":"设置","slug":"设置","permalink":"http://yoursite.com/tags/设置/"}],"keywords":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}]},{"title":"页面介绍 <Span Style='color:yellow;font-Weight:bold;'>[加密]</span>","slug":"搭建/最全实例","date":"2019-03-14T12:32:14.000Z","updated":"2019-03-24T11:10:26.531Z","comments":true,"path":"2019/03/14/da-jian/zui-quan-shi-li/","link":"","permalink":"http://yoursite.com/2019/03/14/da-jian/zui-quan-shi-li/","excerpt":"","text":"Markdown语法规则一、斜体、粗体粗体和上面一样是粗体斜体和上面一样是斜体可 以 加 空 格 二、分割线三个或者以上的-_*，必须单独一行，可含有空格。呵呵呵呵 哈哈哈哈 啦啦啦啦 三、区块引用使用’&gt;’角括号进行区块引用 区块引用 两层引用 三层引用 四、标题样式markdown支持两种标题语法，Setext和atx，Setext 形式是用底线的形式，利用三个或更多 = （最高阶标题）和 - （第二阶标题），Atx 形式在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶。 最高阶标题第二阶标题一级标题二级标题三级标题四级标题五级标题六级标题七级标题五、无序列表使用-+*号，效果一样，注意符号后面的空格，但是不能混合使用，混合的话就成了嵌套列表 减号无序列表 加号无序列表 星号无序列表 混合使用 混合使用 混合使用 混合使用 混合使用 混合使用 混合使用 混合使用 六、有序列表使用数字和英文句点，数字可以无序，注意点后面的空格 有序列表1 有序列表2 有序列表5 有序列表8 有序列表6 七、嵌套列表注意第二级的前后都有空格 嵌套列表1 嵌套列表2 嵌套列表3 嵌套列表4 嵌套列表5 八、链接链接有两种，行内(inline) 和 参考(reference)两种形式 1、行内(inline)形式行内形式是直接在后面用括号直接接上链接百度 2、加上title属性也可以加上title属性，注意中间有个空格，使用双引号，把鼠标放在链接上，就可以看出区别了百度 3、参考(reference)方式：这是[Google][1] ,这是[Yahoo][2],这是[MSN][3].[1]:http://google.com/ “Google”[2]:http://search.yahoo.com/ “Yahoo Search”[3]:http://search.msn.com/ “MSN Search” 4、自动链接：自动链接直接用一对尖括号包围即可https://www.baidu.com 九、插入图片：图片的语法和文字链接的形式很像，只不过前面加个!，后面跟图片的地址 1、行内(inline)形式(注意title属性是可选的) 2、参考(reference)形式![kobe][id][id]:http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg “Kobe Bryant” 十、代码1、代码段代码段在一般的段落文字中，你可以使用反引号 ` 来标记代码区段，区段内的 &amp;、&lt; 和 &gt; 都会被自动的转换成 HTML 实体，这项特性让你可以很容易的在代码区段内插入 HTML 码： -------- 2、段落代码块如果要建立一个已经格式化好的代码区块，只要每行都`缩进 4 个空格或是一个 tab`就可以了，而 &amp;、&lt; 和 &gt; 也一样会自动转成 HTML 实体。 3、行内代码：高亮在第一行的后面指定编程语言，也可以不指定。（Markdown目前好像不支持更改代码块背景颜色。。。。） var odiv =document.getElementsByTagName(‘text’); 十一、注释和html的一样&lt;!-- 注释 --> 十二、转义字符\\ 反斜杠` 反引号* 星号_ 下划线{} 大括号[] 中括号() 小括号# 井号+ 加号- 减号. 英文句号! 感叹号 十三、表格第一种 name age sex kobe 8 man bryant 24 man 第二种【推荐使用】 name age kobe 8 bryant 24 十四、进阶教程：1、更改字体、字号、颜色Markdown 通过简单标记语法，使普通文本内容具有一定格式。但它本身不支持修改字体、字号与颜色等功能的。CSDN-markdown 编辑器是其衍生版本，支持基于 PageDown ( Stack Overflow）所使用的编辑器的扩展功能（如表格、脚注、内嵌HTML、内嵌 LaTeX 等等）。Size：规定文本的尺寸大小，取值从 1 到 7 ，浏览器默认值是 3. 我是黑体字我是微软雅黑我是华文彩云我是红色我是绿色我是蓝色我是尺寸我是黑体，绿色，尺寸为5 2、为文字添加背景色由于 style 标签和标签的 style 属性不被支持，所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色。故这里对于文字背景色的设置，只是将那一整行看作一个表格，更改了那个格子的背景色（bgcolor） 背景色yellow 3、设置图片大小1. 更改图片百分比 2.更改图片像素值 3.图片居左 ps：right、left 、center Front-matter 选项详解Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。 配置选项 默认值 描述 title Markdown 的文件标题 文章标题，强烈建议填写此选项 date 文件创建时的日期时间 发布时间，强烈建议填写此选项，且最好保证全局唯一 author 根 _config.yml 中的 author 文章作者 img featureImages 中的某个值 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpg top true 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章 cover false v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中 coverImg 无 v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 password 无 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项 toc true 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项 mathjax false 是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行 summary 无 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories 无 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 tags 无 文章标签，一篇文章可以多个标签 注意: 如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。 date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。 以下为文章的 Front-matter 示例。 layout 布局 title 标题 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 author: 作者 img: 图片展示 top: true 推荐文章 cover: true 首页推荐文章 coverImg: 首页轮播封面需要显示的图片路径 password: 密码 toc: false 文章目录 mathjax: false 是否开启数学公式支持 summary: 文章的特殊内容的配置,没有的话按默认设置来！ categories: 分类 tags: 标签 General 主题特点 原生JavaScript实现，去jQuery化 样式支持CSS预处理器Less，方便主题自定义 文章过期提醒功能 文章阅读进度条 网站公告功能 首页图片懒加载 首页文章缩略图自动检索文章内图片，支持自动随机图片 主题支持响应式 支持3D云标签 支持文章推送和文章打赏 站内本地搜索和谷歌搜索 支持多个第三方评论系统 支持网站统计和不蒜子访客统计 移动端的简洁设计 支持代码高亮并支持自定义高亮样式 支持Shell脚本通过Travis CI自动化部署Hexo博客 支持Hexo自动化部署结果发送邮件和实时推送到钉钉 /* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */ .bg-color { background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); } @-webkit-keyframes rainbow { /* 动态切换背景颜色. */ } @keyframes rainbow { /* 动态切换背景颜色. */ } 示例 文档","categories":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/categories/Markdown/"}],"tags":[{"name":"设置","slug":"设置","permalink":"http://yoursite.com/tags/设置/"}],"keywords":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/categories/Markdown/"}]},{"title":"写作页面的创建！","slug":"搭建/写作作","date":"2019-03-14T06:15:01.000Z","updated":"2019-03-29T08:08:51.827Z","comments":true,"path":"2019/03/14/da-jian/xie-zuo-zuo/","link":"","permalink":"http://yoursite.com/2019/03/14/da-jian/xie-zuo-zuo/","excerpt":"","text":"这是测试页面git config --global credential.helper wincred git clone 页面地址 hexo new “写 作” //写作 hexo draft “草 稿” //草稿 $ npm i -S hexo-prism-pluginnpm i -S hexo-prism-plugin 首先，你应该编辑你的_config.yml通过添加以下配置。 prism_plugin: mode: 'preprocess' # realtime/preprocess theme: 'default' line_number: false # default false custom_css: 'path/to/your/custom.css' # optional 在那之后，检查highlight选择_config.yml。确保默认代码高亮插件被禁用。 highlight: enable: false 最后，通过运行以下命令来清理和重新生成项目： &gt; hexo clean &gt; hexo generate","categories":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}],"tags":[{"name":"设置","slug":"设置","permalink":"http://yoursite.com/tags/设置/"}],"keywords":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}]},{"title":"由系统自动生成的一篇文章","slug":"hello-world","date":"2019-03-13T06:32:12.000Z","updated":"2019-03-21T18:42:55.772Z","comments":true,"path":"2019/03/13/hello-world/","link":"","permalink":"http://yoursite.com/2019/03/13/hello-world/","excerpt":"","text":"欢迎光临我的博客! 这是我的的第一篇文章。 快速启动由系统自动生成$ hexo new \"My New Post\" 详细信息: Writing 运行服务器$ hexo server More info: Server 生成静态文件$ hexo generate 详细信息: Generating 部署到远程站点$ hexo deploy 详细信息: Deployment","categories":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}],"tags":[{"name":"设置","slug":"设置","permalink":"http://yoursite.com/tags/设置/"}],"keywords":[{"name":"搭建","slug":"搭建","permalink":"http://yoursite.com/categories/搭建/"}]},{"title":"GitLab CI/CD 介绍和使用","slug":"软件工具/devops/GitLab CI 介绍和使用","date":"2018-11-22T15:30:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/11/22/ruan-jian-gong-ju/devops/gitlab-ci-jie-shao-he-shi-yong/","link":"","permalink":"http://yoursite.com/2018/11/22/ruan-jian-gong-ju/devops/gitlab-ci-jie-shao-he-shi-yong/","excerpt":"","text":"一、持续集成介绍 持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试)来验证，从而尽快地发现集成错误。许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发内聚的软件。—— Martin Fowler 1 概念 持续集成(Continuous Integration)：频繁地(一天多次)将代码集成到主干。让产品可以快速迭代，同时还能保持高质量。它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。“持续集成并不能消除 Bug，而是让它们非常容易发现和改正。” 持续交付(Continuous Delivery)：频繁地将软件的新版本，交付给质量团队或者用户，以供评审。如果评审通过，代码就进入生产阶段。持续交付可以看作持续集成的下一步。它强调的是，不管怎么更新，软件是随时随地可以交付的。 持续部署(continuous Deployment)：代码通过评审以后，自动部署到生产环境。是持续部署是持续交付的下一步，持续部署的目标是，代码在任何时刻都是可部署的，可以进入生产阶段。 2 持续集成的好处 自动化构建且状态对每个人可见。可以使用Maven、Gradle等来实现自动化构建，可以在构建过程中实现自动化测试（前提是有写单元测试用例）。集成服务器在持续集成过程中发现问题可以及时发送警告给相关的干系人。 解放了重复性劳动。自动化部署工作可以解放集成、测试、部署等重复性劳动，而机器集成的频率明显比手工高很多。 更快地发现和修复问题。持续集成更早的获取变更，更早的进入测试，更早的发现问题，解决问题的成本显著下降。 更快的交付成果。更早发现错误减少解决错误所需的工作量。集成服务器在构建环节发现错误可以及时通知开发人员修复。集成服务器在部署环节发现错误可以回退到上一版本，服务器始终有一个可用的版本。 减少手工的错误。在重复性动作上，人容易犯错，而机器犯错的几率几乎为零。 减少了等待时间。缩短了从开发、集成、测试、部署各个环节的时间，从而也就缩短了中间可以出现的等待时机。持续集成，意味着开发、集成、测试、部署也得以持续。 更高的产品质量。集成服务器往往提供代码质量检测等功能，对不规范或有错误的地方会进行标致，也可以设置邮件和短信等进行警告。 3 常用持续集成工具 Jenkins GitLab CI TeamCity Travis CI Bamboo CircleCI … 二、Gitlab 持续集成 1 概念介绍(1) GitLabGitLab 是一个利用Ruby on Rails开发的开源应用程序，实现一个自托管的 Git 项目仓库，可通过 Web 界面进行访问公开的或者私人项目。它拥有与GitHub类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。 (2) GitLab CI/CDGitLab CI/CD 是GitLab Continuous Integration（Gitlab持续集成）的简称。GitLab 自GitLab 8.0开始提供了持续集成的功能，且对所有项目默认开启。只要在项目仓库的根目录添加.gitlab-ci.yml文件，并且配置了Runner（运行器），那么每一次push或者合并请求（Merge Request）都会触发CI Pipeline。 (3) GitLab RunnerGitLab Runner GitLab Runner是一个开源项目，可以运行在 GNU / Linux，macOS 和 Windows 操作系统上。每次push的时候 GitLab CI 会根据.gitlab-ci.yml配置文件运行你流水线（Pipeline）中各个阶段的任务（Job），并将结果发送回 GitLab。GitLab Runner 是基于 Gitlab CI 的 API 进行构建的相互隔离的机器（或虚拟机）。GitLab Runner 不需要和 Gitlab 安装在同一台机器上，且考虑到 GitLab Runner 的资源消耗问题和安全问题，也不建议这两者安装在同一台机器上。 Gitlab Runner 分为三种： 共享Runner(Shared runners) 专享Runner(Specific runners) 分组Runner(Group Runners) (4) PipelinesPipelines 中文称为流水线，是分阶段执行的构建任务。如：安装依赖、运行测试、打包、部署开发服务器、部署生产服务器等流程。每一次push或者Merge Request都会触发生成一条新的Pipeline。 下面是流水线示例图： (5) StagesStages 表示构建阶段，可以理解为上面所说“安装依赖”、“运行测试”等环节的流程。我们可以在一次 Pipeline 中定义多个 Stages，这些 Stages 会有以下特点： 所有 Stages 会按照顺序运行，即当一个 Stage 完成后，下一个 Stage 才会开始（当然可以在.gitlab-ci.yml文件中配置上一阶段失败时下一阶段也执行） 只有当所有 Stages 完成后，该构建任务 (Pipeline) 才会成功 如果任何一个 Stage 失败，那么后面的 Stages 不会执行，该构建任务 (Pipeline) 失败 下面是一个流水线内的阶段任务示例图： (6) JobsJobs 表示构建的作业（或称之为任务），表示某个 Stage 里面执行的具体任务。我们可以在 Stages 里面定义多个 Jobs，这些 Jobs 会有以下特点： 相同 Stage 中的 Jobs 无执行顺序要求，会并行执行 相同 Stage 中的 Jobs 都执行成功时，该 Stage 才会成功 如果任何一个 Job 失败，那么该 Stage 失败，即该构建任务 (Pipeline) 也失败（可以在.gitlab-ci.yml文件中配置允许某 Job 可以失败，也算该 Stage 成功） (7) .gitlab-ci.ymlGitLab 中默认开启了 Gitlab CI/CD 的支持，且使用YAML文件.gitlab-ci.yml来管理项目构建配置。该文件需要存放于项目仓库的根目录（默认路径，可在 GitLab 中修改），它定义该项目的 CI/CD 如何配置。所以，我们只需要在.gitlab-ci.yml配置文件中定义流水线的各个阶段，以及各个阶段中的若干作业（任务）即可。 下面是.gitlab-ci.yml文件的一个简单的Hello World示例： # 定义 test 和 package 两个 Stages stages: - test - package # 定义 package 阶段的一个 job package-job: stage: package script: - echo \"Hello, package-job\" - echo \"I am in package stage\" # 定义 test 阶段的一个 job test-job: stage: test script: - echo \"Hello, test-job\" - echo \"I am in test stage\" 以上配置中，用 stages 关键字来定义 Pipeline 中的各个构建阶段，然后用一些非关键字来定义 jobs。每个 job 中可以可以再用 stage 关键字来指定该 job 对应哪个 stage。job 里面的script关键字是每个 job 中必须要包含的，它表示每个 job 要执行的命令。 注：猜猜上面例子的运行结果？ (8) BadgesBadges 即：徽章，当 Pipelines 执行过程中或者执行完成时会生成徽章，你可以将这些徽章加入到你的README.md文件中，便于从仓库主页看到最新的构建状态。 徽章的链接形如下： http://example.gitlab.com/namespace/project/badges/branch/build.svg 我们用 GitLab 项目的徽章作为例子，效果如下： 2 安装 GitLab Runner这里有 GitLab Runner安装相关的资源和文档可供大家参考。以下仅以咱们公司常用的Centos为例来做安装说明。 (1) 在线安装# 添加官方的repo. curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash # yum 安装Gtilab Runner. sudo yum install gitlab-runner (2) 离线安装# 安装Git sudo yum –y install git # rpm离线安装事先下载好的 Gitlab Runner rpm包. rpm -ivh gitlab-runner-10.5.0-1.x86_64.rpm 注：Gitlab Runner 依赖了Git，所以，离线安装 Gitlab Runner 之前得首先安装Git，离线安装包可以从这里下载。 3 注册 Gitlab Runner安装了 GitLab Runner 之后,就可以为 GitLab 中的仓库注册一个 Runner，注册的交互式命令如下： sudo gitlab-runner register 命令的交互式的过程如下： # 输入注册命令 sudo gitlab-runner register # 输入公司的 GitLab 网站地址 Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com ) http://gitlab.xxxx.com/ # 你项目仓库的token，token可以在 Settings -> CI/CD -> Runners settings 中找到. Please enter the gitlab-ci token for this runner xxx # 输入描述这个 runner 的名称 Please enter the gitlab-ci description for this runner [hostame] my-runner # 输入 runner 的标签 Please enter the gitlab-ci tags for this runner (comma separated): my-tag,another-tag # 输入 runner 的执行器. Please enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell: shell 以上流程注册成功之后，就可以在你的项目仓库中 Settings -&gt; CI/CD -&gt; Runners settings 看到这个 Runner 了。 4 Gitlab Runner 常用命令汇总下面的表格中列出了一些常用的Gitlab Runner命令，以供参考： 命令 描述 gitlab-runner run 运行一个runner服务 gitlab-runner register 注册一个新的runner gitlab-runner start 启动服务 gitlab-runner stop 关闭服务 gitlab-runner restart 重启服务 gitlab-runner status 查看各个runner的状态 gitlab-runner unregister 注销掉某个runner gitlab-runner list 显示所有运行着的runner gitlab-runner verify 检查已注册的运行程序是否可以连接到GitLab，但它不验证GitLab Runner服务是否正在使用运行程序。 三、一个Web项目 CI/CD 简单示例接下来，用一个实际项目来演示 GitLab CI/CD 的配置和使用，其中主要包括：编译测试、项目打包、部署服务、Sonar手动检查、Sonar定时检查五个阶段。 下面用一个传统的 Java web 项目(这里称之为cidemo)和Tomcat来作为示例，并用来展示常用配置的使用。当我每次push代码或者Merge Request时，都会生成一条流水线，且会自动执行我们上面所说的一些阶段，而Sonar手动检查我们设置为手动操作，且再额外配置Sonar定时检查的任务。 注：我 Gitlab Runner 是安装在Centos环境中，并使用的shell执行器。 # 定义stages stages: - test - install - run - sonar # 定义安装包的存放位置和Tomcat服务器的地址的变量，便于后续部署使用. variables: CIDEMO_PACKAGE_DIR: '/home/gitlab-runner/packages/cidemo/' SERVER_HOME_DIR: '/home/gitlab-runner/tomcat/cidemo-tomcat/' ###################### 构建编译和单元测试的job. ####################### 编译测试任务: stage: test only: - branches script: - mvn clean test ###################### Maven安装得到war包的job. ####################### 打包任务: stage: install only: - develop script: - mvn install - echo '准备将最新的war包复制、保存到某个目录里面供后续使用.' - rm -rf $CIDEMO_PACKAGE_DIR/*.war - cp target/*.war $CIDEMO_PACKAGE_DIR/cidemo.war ####################### 部署运行war包的job. ####################### 部署运行任务: stage: run only: - develop script: - echo '准备部署和运行war包！(为了方便部署到了Tomcat中运行)' - cd $SERVER_HOME_DIR - sh bin/shutdown.sh - rm -rf webapps/cidemo.war - cp $CIDEMO_PACKAGE_DIR/cidemo.war $SERVER_HOME_DIR/webapps/cidemo.war - nohup sh ./bin/startup.sh > logs/cidemo_nohup.log 2>&amp;1 &amp; ###################### Sonar手动构建的job. ####################### Sonar手动检查: stage: sonar when: manual only: - develop script: - echo '准备对项目代码做sonar的质量检查！' - mvn compile &amp;&amp; mvn sonar:sonar -Dsonar.host.url=http://172.16.34.102:9000 -Dsonar.login=497a0e0e2fc07f64c4b54edc17bb47dfa251ba34 ###################### Sonar每晚定时构建的job. ####################### Sonar定时检查: stage: sonar only: - schedules script: - echo '开始定时对项目代码做sonar的质量检查！' - mvn compile &amp;&amp; mvn sonar:sonar -Dsonar.host.url=http://172.16.34.102:9000 -Dsonar.login=497a0e0e2fc07f64c4b54edc17bb47dfa251ba34 四、Gitlab CI/CD yaml 常用配置介绍开始构建之前.gitlab-ci.yml文件定义了一系列带有约束说明的任务。这些任务都是以任务名开始并且至少要包含script部分，.gitlab-ci.yml允许指定无限量 jobs。每个 jobs 必须有一个唯一的名字，且名字不能是下面列出的保留字段： image services stages types before_script after_script variables cache job由一列参数来定义 jobs 的行为： Keyword Required Description script yes Runner执行的命令或脚本 extends no 定义此作业将继承的配置条目 image no 所使用的docker镜像，查阅使用docker镜像 services no 所使用的docker服务，查阅使用docker镜像 stage no 定义job stage（默认：test） type no stage的别名（已弃用） variables no 定义job级别的变量 only no 定义一列git分支，并为其创建job except no 定义一列git分支，不创建job tags no 定义一列tags，用来指定选择哪个Runner（同时Runner也要设置tags） allow_failure no 允许job失败。失败的job不影响commit状态 when no 定义何时开始job。可以是on_success，on_failure，always或者manual dependencies no 定义job依赖关系，这样他们就可以互相传递artifacts cache no 定义应在后续运行之间缓存的文件列表 before_script no 重写一组在作业前执行的命令 after_script no 重写一组在作业后执行的命令 environment no 定义此作业完成部署的环境名称 coverage no 定义给定作业的代码覆盖率设置 etry no 定义在发生故障时可以自动重试作业的时间和次数 parallel no 定义应并行运行的作业实例数 extends 是在 GitLab 11.3 中引入的。 extends定义了一个使用extends的作业将继承的条目名称。它是使用YAML锚点的替代方案，并且更加灵活和可读： .tests: script: rake test stage: test only: refs: - branches rspec: extends: .tests script: rake rspec only: variables: - $RSPEC 在上面的示例中，rspec作业继承自.tests模板作业。 GitLab 将根据键执行反向深度合并。 GitLab将： 将rspec内容以递归方式合并到.tests中。 不合并键的值。 这实际生成的是以下rspec作业： rspec: script: rake rspec stage: test only: refs: - branches variables: - $RSPEC 注: rake test已被rake rspec脚本覆盖。 image 和 services这两个关键字允许使用一个自定义的 Docker 镜像和一系列的服务，并且可以用于整个 job 周期。详细配置文档请查看a separate document。 before_script 和 after_scriptbefore_script用来定义所有 job 之前运行的命令，after_script用来定义所有 job 之后运行的命令。它们可以是一个数组或者是多行字符串。 stagesstages 用来定义可以被 job 调用的 stages。stages 的规范允许有灵活的多级 pipelines。 stages中的元素顺序决定了对应job的执行顺序： 相同 stage 的 job 可以平行执行。 下一个 stage 的 job 会在前一个 stage 的 job 成功后开始执行。 接下仔细看看这个例子，它包含了3个 stage： stages: - build - test - deploy 首先，所有 build 的 jobs 都是并行执行的。 所有 build 的 jobs 执行成功后，test 的 jobs 才会开始并行执行。 所有 test 的 jobs 执行成功，deploy 的 jobs 才会开始并行执行。 所有的 deploy 的 jobs 执行成功，commit才会标记为success。 任何一个前置的 jobs 失败了，commit会标记为failed并且下一个 stages 的 jobs 都不会执行。 这有两个特殊的例子值得一提： 如果.gitlab-ci.yml中没有定义stages，那么 job’s stages 会默认定义为build，test和deploy。 如果一个 job 没有指定 stage，那么这个任务会分配到 test stage。 only 和 exceptonly和except是两个参数用分支策略来限制 jobs 构建： only定义哪些分支和标签的git项目将会被job执行。 except定义哪些分支和标签的git项目将不会被job执行。 下面是refs策略的使用规则： only 和 except 可同时使用。如果only和except在一个 job 配置中同时存在，则以 only 为准，跳过 except(从下面示例中得出)。 only 和 except 可以使用正则表达式。 only 和 except 允许使用特殊的关键字：branches，tags和triggers。 only 和 except 允许使用指定仓库地址但不是forks的仓库(查看示例3)。 在下面这个例子中，job 将只会运行以issue-开始的refs(分支)，然而except中设置将被跳过。 job: # use regexp only: - /^issue-.*$/ # use special keyword except: - branches 在下面这个例子中，job 将只会执行有tags的refs，或者通过API触发器明确地请求构建。 job: # use special keywords only: - tags - triggers 下面这个例子将会为所有的分支执行job，但 master 分支除外。 job: only: - branches@gitlab-org/gitlab-ce except: - master@gitlab-org/gitlab-ce variablesGItLab CI 允许在.gitlab-ci.yml文件中添加变量，并在 job 环境中起作用。因为这些配置是存储在 git 仓库中，所以最好是存储项目的非敏感配置，例如： variables: DATABASE_URL:\"postgres://postgres@postgres/my_database\" 这些变量可以被后续的命令和脚本使用。 除了用户自定义的变量外，Runner 也可以定义它自己的变量。CI_COMMIT_REG_NAME就是一个很好的例子，它的值表示用于构建项目的分支或tag名称。除了在.gitlab-ci.yml中设置变量外，还有可以通过 GitLab 的界面上设置私有变量。 这里有更多关于variables的介绍。 cachecache: paths使用paths指令选择要缓存的文件或目录。也可以使用通配符。 如果 cache 定义在 jobs 的作用域之外，那么它就是全局缓存，所有 jobs 都可以使用该缓存。 缓存binaries和.config中的所有文件： rspec: script: test cache: paths: - binaries/ - .config 缓存git中没有被跟踪的文件： rspec: script: test cache: untracked: true 缓存binaries下没有被git跟踪的文件： rspec: script: test cache: untracked: true paths: - binaries/ job 中优先级高于全局的。下面这个rspec job中将只会缓存binaries/下的文件： cache: paths: - my/files rspec: script: test cache: key: rspec paths: - binaries/ 注意，缓存是在 jobs 之前进行共享的。如果你不同的 jobs 缓存不同的文件路径，必须设置不同的cache:key，否则缓存内容将被重写。缓存只是尽力而为之，所以别期望缓存会一直存在。 cache: keykey指令允许我们定义缓存的作用域(亲和性)，可以是所有 jobs 的单个缓存，也可以是每个 job，也可以是每个分支或者是任何你认为合适的地方。它也可以让你很好的调整缓存，允许你设置不同 jobs 的缓存，甚至是不同分支的缓存。 cache:key可以使用任何的预定义变量。 默认key是默认设置的这个项目缓存，因此默认情况下，从GitLab 9.0开始，每个 pipelines 和 jobs 中可以共享一切。 配置示例 缓存每个job： cache: key: \"$CI_JOB_NAME\" untracked: true 缓存每个分支： cache: key: \"$CI_COMMIT_REF_NAME\" untracked: true 缓存每个 job 且每个分支： cache: key: \"$CI_JOB_NAME/$CI_COMMIT_REF_NAME\" untracked: true 缓存每个分支且每个stage： cache: key: \"$CI_JOB_STAGE/$CI_COMMIT_REF_NAME\" untracked: true 如果使用的Windows Batch(windows批处理)来跑脚本需要用%替代$： cache: key: \"%CI_JOB_STAGE%/%CI_COMMIT_REF_NAME%\" untracked: true allow_failureallow_failure可以用于当你想设置一个 job 失败的之后并不影响后续的CI组件的时候。失败的 jobs 不会影响到commit状态。 当开启了允许 job 失败，所有的 intents 和 purposes 里的 pipeline 都是成功/绿色，但是也会有一个”CI build passed with warnings“信息显示在Merge Request或commit或job page。这被允许失败的作业使用，但是如果失败表示其他地方应采取其他（手动）步骤。 下面的这个例子中，job1和job2将会并列进行，如果job1失败了，它也不会影响进行中的下一个 stage，因为这里有设置了allow_failure: true。 job1: stage: test script: - execute_script_that_will_fail allow_failure: true job2: stage: test script: - execute_script_that_will_succeed job3: stage: deploy script: - deploy_to_staging whenwhen用于实现在发生故障或尽管失败时运行的作业。when可以设置以下值： on_success - 只有前面 stages 的所有工作成功时才执行。这是默认值。 on_failure - 当前面 stages 中任意一个jobs失败后执行。 always - 无论前面 stages 中 jobs 状态如何都执行。 manual - 手动执行(GitLab8.10增加)。更多请查看手动操作。 artifactsartifacts用于指定成功后应附加到 job 的文件和目录的列表。只能使用项目工作间内的文件或目录路径。在job成功完成后artifacts将会发送到GitLab中，同时也会在 GitLab UI 中提供下载。如果想要在不通的 job 之间传递artifacts，请查阅依赖关系。以下是一些例子： 发送binaries和.config中的所有文件： artifacts: paths: - binaries/ - .config 发送所有没有被Git跟踪的文件： artifacts: untracked: true 发送没有被Git跟踪和binaries中的所有文件： artifacts: untracked: true paths: - binaries/ 五、其他相关内容1 API触发器 TriggersTriggers 可用于强制使用API调用重建特定分支，tag或commits。API的使用示例可以在Settings -&gt; CI/CD -&gt; Pipeline triggers中找到。 在triggers文档中查看更多。 2 配置定时任务GitLab CI 中可以在 GitLab Settings -&gt; CI/CD -&gt; Schedules中配置定时任务，点击New Schedule按钮，可以配置你流水线的定时执行任务，包括：描述信息、定时的Cron表达式、目标分支、变量等信息。 然后在需要定时执行的作业的only分支写上schedules即可。 3 校验 .gitlab-ci.ymlGitLab CI 的每个实例都有一个名为Lint的嵌入式调试工具。 你可以在 GitLab 实例的-/ci/lint下找到该链接。 4 配置邮件发送如果希望在每次构建完成后（或者在仅构建失败的情况下），想邮件发送给相关开发人员，则可以在 GitLab Settings -&gt; Integrations 中找到Pipelines emails，点击进去就可以配置邮件发送相关的内容了。 5 GitLab PagesGitLab Pages是用于托管静态文件的服务。而pages是一个特殊的job，用于将静态的内容上传到GitLab，可用于为您的网站提供服务。它有特殊的语法，因此必须满足以下两个要求： 任何静态内容必须放在public/目录下 artifacts必须定义在public/目录下 下面的这个例子是将所有文件从项目根目录移动到public/目录。.public工作流是cp，并且它不会循环复制public/本身。 pages: stage: deploy script: - mkdir .public - cp -r * .public - mv .public public artifacts: paths: - public only: - master 更多内容请查看GitLab Pages用户文档。 6 跳过 jobs如果你的commit信息中包含[ci skip]或者[skip ci]，不论大小写，那么这个commit将会创建但是 jobs 也会跳过。 参考文档 官方文档地址 segmentfault yaml配置中文翻译","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"GitLab CI","slug":"GitLab-CI","permalink":"http://yoursite.com/tags/GitLab-CI/"},{"name":"DevOps","slug":"DevOps","permalink":"http://yoursite.com/tags/DevOps/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://yoursite.com/tags/Jenkins/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"Vue 文档风格的 Typora 主题","slug":"搭建/Vue 文档风格的 Typora 主题","date":"2018-11-18T16:30:00.000Z","updated":"2019-04-10T06:01:44.048Z","comments":true,"path":"2018/11/19/da-jian/vue-wen-dang-feng-ge-de-typora-zhu-ti/","link":"","permalink":"http://yoursite.com/2018/11/19/da-jian/vue-wen-dang-feng-ge-de-typora-zhu-ti/","excerpt":"","text":"typora-vue-theme 是 Typora Markdown 文档编辑器中一款类似Vue文档风格的主题。 简介Typora是一款支持实时预览的 Markdown 编辑器和阅读器，支持Windows、macOS、Linux三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。typora-vue-theme就是参考了Vue文档风格而开发的一个 Typora 自定义主题。 安装主题 下载本主题中的vue.css、vue-dark.css文件和包含字体的vue文件夹； 打开 Typora，点击“偏好设置” =&gt; “打开主题文件夹”按钮，将弹出 Typora 的主题文件夹； 将下载好的vue.css和vue-dark.css文件和包含字体的vue文件夹放到 Typora 的主题文件夹中； 关闭并重新打开 Typora，从菜单栏中选择 “主题” =&gt; “Vue” 或者 “Vue Dark” 即可。 效果图 Vue Dark 感谢: 本主题中的vue-dark.css来自typora-vue-dark-theme.","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"},{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"CPU多级缓存","slug":"软件工具/CPU多级缓存","date":"2018-11-18T13:55:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/11/18/ruan-jian-gong-ju/cpu-duo-ji-huan-cun/","link":"","permalink":"http://yoursite.com/2018/11/18/ruan-jian-gong-ju/cpu-duo-ji-huan-cun/","excerpt":"","text":"一、什么是CPU缓存1. CPU缓存的来历众所周知,CPU是计算机的大脑，它负责执行程序的指令，而内存负责存数据, 包括程序自身的数据。在很多年前，CPU的频率与内存总线的频率在同一层面上。内存的访问速度仅比寄存器慢一些。但是，这一局面在上世纪90年代被打破了。CPU的频率大大提升，但内存总线的频率与内存芯片的性能却没有得到成比例的提升。并不是因为造不出更快的内存，只是因为太贵了。内存如果要达到目前CPU那样的速度，那么它的造价恐怕要贵上好几个数量级。所以，CPU的运算速度要比内存读写速度快很多，这样会使CPU花费很长的时间等待数据的到来或把数据写入到内存中。所以，为了解决CPU运算速度与内存读写速度不匹配的矛盾，就出现了CPU缓存。 2. CPU缓存的概念CPU缓存是位于CPU与内存之间的临时数据交换器，它的容量比内存小的多但是交换速度却比内存要快得多。CPU缓存一般直接跟CPU芯片集成或位于主板总线互连的独立芯片上。 为了简化与内存之间的通信，高速缓存控制器是针对数据块，而不是字节进行操作的。高速缓存其实就是一组称之为缓存行(Cache Line)的固定大小的数据块组成的，典型的一行是64字节。 3. CPU缓存的意义CPU往往需要重复处理相同的数据、重复执行相同的指令，如果这部分数据、指令CPU能在CPU缓存中找到，CPU就不需要从内存或硬盘中再读取数据、指令，从而减少了整机的响应时间。所以，缓存的意义满足以下两种局部性原理： 时间局部性（Temporal Locality）：如果一个信息项正在被访问，那么在近期它很可能还会被再次访问。 空间局部性（Spatial Locality）：如果一个存储器的位置被引用，那么将来他附近的位置也会被引用。 二、CPU的三级缓存1. CPU的三级缓存随着多核CPU的发展，CPU缓存通常分成了三个级别：L1，L2，L3。级别越小越接近CPU，所以速度也更快，同时也代表着容量越小。L1 是最接近CPU的, 它容量最小（例如：32K），速度最快，每个核上都有一个 L1 缓存，L1 缓存每个核上其实有两个 L1 缓存, 一个用于存数据的 L1d Cache（Data Cache），一个用于存指令的 L1i Cache（Instruction Cache）。L2 缓存 更大一些（例如：256K），速度要慢一些, 一般情况下每个核上都有一个独立的L2 缓存; L3 缓存是三级缓存中最大的一级（例如3MB），同时也是最慢的一级, 在同一个CPU插槽之间的核共享一个 L3 缓存。 下面是三级缓存的处理速度参考表： 从CPU到 大约需要的CPU周期 大约需要的时间(单位ns) 寄存器 1 cycle L1 Cache ~3-4 cycles ~0.5-1 ns L2 Cache ~10-20 cycles ~3-7 ns L3 Cache ~40-45 cycles ~15 ns 跨槽传输 ~20 ns 内存 ~120-240 cycles ~60-120ns 下图是Intel Core i5-4285U的CPU三级缓存示意图： 就像数据库缓存一样，获取数据时首先会在最快的缓存中找数据，如果缓存没有命中(Cache miss) 则往下一级找, 直到三级缓存都找不到时，那只有向内存要数据了。一次次地未命中，代表取数据消耗的时间越长。 2. 带有高速缓存CPU执行计算的流程 程序以及数据被加载到主内存 指令和数据被加载到CPU的高速缓存 CPU执行指令，把结果写到高速缓存 高速缓存中的数据写回主内存 目前流行的多级缓存结构如下图： 三、CPU缓存一致性协议(MESI)MESI（Modified Exclusive Shared Or Invalid）(也称为伊利诺斯协议，是因为该协议由伊利诺斯州立大学提出的）是一种广泛使用的支持写回策略的缓存一致性协议。为了保证多个CPU缓存中共享数据的一致性，定义了缓存行(Cache Line)的四种状态，而CPU对缓存行的四种操作可能会产生不一致的状态，因此缓存控制器监听到本地操作和远程操作的时候，需要对地址一致的缓存行的状态进行一致性修改，从而保证数据在多个缓存之间保持一致性。 1. MESI协议中的状态CPU中每个缓存行（Caceh line)使用4种状态进行标记，使用2bit来表示: 状态 描述 监听任务 状态转换 M 修改 (Modified) 该Cache line有效，数据被修改了，和内存中的数据不一致，数据只存在于本Cache中。 缓存行必须时刻监听所有试图读该缓存行相对就主存的操作，这种操作必须在缓存将该缓存行写回主存并将状态变成S（共享）状态之前被延迟执行。 当被写回主存之后，该缓存行的状态会变成独享（exclusive)状态。 E 独享、互斥 (Exclusive) 该Cache line有效，数据和内存中的数据一致，数据只存在于本Cache中。 缓存行也必须监听其它缓存读主存中该缓存行的操作，一旦有这种操作，该缓存行需要变成S（共享）状态。 当CPU修改该缓存行中内容时，该状态可以变成Modified状态 S 共享 (Shared) 该Cache line有效，数据和内存中的数据一致，数据存在于很多Cache中。 缓存行也必须监听其它缓存使该缓存行无效或者独享该缓存行的请求，并将该缓存行变成无效（Invalid）。 当有一个CPU修改该缓存行时，其它CPU中该缓存行可以被作废（变成无效状态 Invalid）。 I 无效 (Invalid) 该Cache line无效。 无 无 注意：对于M和E状态而言总是精确的，他们在和该缓存行的真正状态是一致的，而S状态可能是非一致的。如果一个缓存将处于S状态的缓存行作废了，而另一个缓存实际上可能已经独享了该缓存行，但是该缓存却不会将该缓存行升迁为E状态，这是因为其它缓存不会广播他们作废掉该缓存行的通知，同样由于缓存并没有保存该缓存行的copy的数量，因此（即使有这种通知）也没有办法确定自己是否已经独享了该缓存行。 从上面的意义看来E状态是一种投机性的优化：如果一个CPU想修改一个处于S状态的缓存行，总线事务需要将所有该缓存行的copy变成invalid状态，而修改E状态的缓存不需要使用总线事务。 MESI状态转换图： 下图表示了当一个缓存行(Cache line)的调整的状态的时候，另外一个缓存行(Cache line)需要调整的状态。 状态 M E S I M × × × √ E × × × √ S × × √ √ I √ √ √ √ 举个示例： 假设cache 1 中有一个变量x = 0的 Cache line 处于S状态(共享)。那么其他拥有x变量的 cache 2、cache 3 等x的 Cache line调整为S状态（共享）或者调整为I状态（无效）。 2. 多核缓存协同操作(1) 内存变量假设有三个CPU A、B、C，对应三个缓存分别是cache a、b、c。在主内存中定义了x的引用值为0。 (2) 单核读取执行流程是： CPU A发出了一条指令，从主内存中读取x。 从主内存通过 bus 读取到 CPU A 的缓存中（远端读取 Remote read）,这时该 Cache line 修改为 E 状态（独享）。 (3) 双核读取执行流程是： CPU A发出了一条指令，从主内存中读取x。 CPU A从主内存通过bus读取到 cache a 中并将该 Cache line 设置为E状态。 CPU B发出了一条指令，从主内存中读取x。 CPU B试图从主内存中读取x时，CPU A检测到了地址冲突。这时CPU A对相关数据做出响应。此时x存储于 cache a 和 cache b 中，x在 chche a 和 cache b 中都被设置为S状态(共享)。 (4) 修改数据执行流程是： CPU A 计算完成后发指令需要修改x. CPU A 将x设置为M状态（修改）并通知缓存了x的 CPU B, CPU B 将本地 cache b 中的x设置为I状态(无效) CPU A 对x进行赋值。 (5) 同步数据那么执行流程是： CPU B 发出了要读取x的指令。 CPU B 通知CPU A,CPU A将修改后的数据同步到主内存时cache a 修改为E（独享） CPU A同步CPU B的x,将cache a和同步后cache b中的x设置为S状态（共享）。 3. CPU 存储模型简介MESI协议为了保证多个 CPU cache 中共享数据的一致性，定义了 Cache line 的四种状态，而 CPU 对 cache 的4种操作可能会产生不一致状态，因此 cache 控制器监听到本地操作和远程操作的时候，需要对地址一致的 Cache line 状态做出一定的修改，从而保证数据在多个cache之间流转的一致性。 但是，缓存的一致性消息传递是要时间的，这就使得状态切换会有更多的延迟。某些状态的切换需要特殊的处理，可能会阻塞处理器。这些都将会导致各种各样的稳定性和性能问题。比如你需要修改本地缓存中的一条信息，那么你必须将I（无效）状态通知到其他拥有该缓存数据的CPU缓存中，并且等待确认。等待确认的过程会阻塞处理器，这会降低处理器的性能。因为这个等待远远比一个指令的执行时间长的多。所以，为了为了避免这种阻塞导致时间的浪费，引入了存储缓存(Store Buffer)和无效队列(Invalidate Queue)。 (1) 存储缓存在没有存储缓存时，CPU 要写入一个量，有以下情况： 量不在该 CPU 缓存中，则需要发送 Read Invalidate 信号，再等待此信号返回，之后再写入量到缓存中。 量在该 CPU 缓存中，如果该量的状态是 Exclusive 则直接更改。而如果是 Shared 则需要发送 Invalidate 消息让其它 CPU 感知到这一更改后再更改。 这些情况中，很有可能会触发该 CPU 与其它 CPU 进行通讯，接着需要等待它们回复。这会浪费大量的时钟周期！为了提高效率，可以使用异步的方式去处理：先将值写入到一个 Buffer 中，再发送通讯的信号，等到信号被响应，再应用到 cache 中。并且此 Buffer 能够接受该 CPU 读值。这个 Buffer 就是 Store Buffer。而不须要等待对某个量的赋值指令的完成才继续执行下一条指令，直接去 Store Buffer 中读该量的值，这种优化叫Store Forwarding。 (2) 无效队列同理，解决了主动发送信号端的效率问题，那么，接受端 CPU 接受到 Invalidate 信号后如果立即采取相应行动(去其它 CPU 同步值)，再返回响应信号，则时钟周期也太长了，此处也可优化。接受端 CPU 接受到信号后不是立即采取行动，而是将 Invalidate 信号插入到一个队列 Queue 中，立即作出响应。等到合适的时机，再去处理这个 Queue 中的 Invalidate 信号，并作相应处理。这个 Queue 就是Invalidate Queue。 四、乱序执行乱序执行（out-of-orderexecution）：是指CPU允许将多条指令不按程序规定的顺序分开发送给各相应电路单元处理的技术。这样将根据各电路单元的状态和各指令能否提前执行的具体情况分析后，将能提前执行的指令立即发送给相应电路。 这好比请A、B、C三个名人为晚会题写横幅“春节联欢晚会”六个大字，每人各写两个字。如果这时在一张大纸上按顺序由A写好”春节”后再交给B写”联欢”，然后再由C写”晚会”，那么这样在A写的时候，B和C必须等待，而在B写的时候C仍然要等待而A已经没事了。 但如果采用三个人分别用三张纸同时写的做法， 那么B和C都不必须等待就可以同时各写各的了，甚至C和B还可以比A先写好也没关系（就象乱序执行），但当他们都写完后就必须重新在横幅上（自然可以由别人做，就象CPU中乱序执行后的重新排列单元）按”春节联欢晚会”的顺序排好才能挂出去。 所以，CPU 为什么会有乱序执行优化？本质原因是CPU为了效率，将长费时的操作“异步”执行，排在后面的指令不等前面的指令执行完毕就开始执行后面的指令。而且允许排在前面的长费时指令后于排在后面的指令执行完。 CPU 执行乱序主要有以下几种： 写写乱序(store store)：a=1;b=2; -&gt; b=2;a=1; 写读乱序(store load)：a=1;load(b); -&gt; load(b);a=1; 读读乱序(load load)：load(a);load(b); -&gt; load(b);load(a); 读写乱序(load store)：load(a);b=2; -&gt; b=2;load(a); 总而言之，CPU的乱序执行优化指的是处理器为提高运算速度而做出违背代码原有顺序的优化。 参考文章： 从Java视角理解系统结构（二）CPU缓存 CPU缓存一致性协议MESI","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"CPU缓存","slug":"CPU缓存","permalink":"http://yoursite.com/tags/CPU缓存/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"常用Bash命令整理之其他常用命令","slug":"软件工具/Linux/常用Bash命令整理之其他常用命令","date":"2018-10-13T10:15:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/10/13/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-qi-ta-chang-yong-ming-ling/","link":"","permalink":"http://yoursite.com/2018/10/13/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-qi-ta-chang-yong-ming-ling/","excerpt":"","text":"1. hostname - 查看主机名hostname命令用于查看系统的主机名，或是修改系统的主机名。 hostname的常用命令如下： # 显示系统的当前主机名 hostname # 修改你系统的主机名 hostname blinkfox-system # 使用 -F 选项，从指定的文件中读取主机名 hostname -F /root/hostname.txt 2. uptime - 查看系统运行时间uptime命令用于打印系统的运行时间等信息。使用如下： uptime 3. w、who - 列出登录的用户w命令用于显示登录用户及他们当前运行的进程。输入的内容格式如下： w # 打印如下 22:42 up 18 days, 1 hr, 2 users, load averages: 1.23 1.79 1.75 USER TTY FROM LOGIN@ IDLE WHAT blinkfox console - 日19 6days - blinkfox s000 - 五23 - w who命令有与w命令类似的用途，但它的功能比w命令更强大一些。语法格式如下： who [OPTION]... [FILE | ARG1 ARG2] who常用命令如下： # 显示当前登录的所有用户信息 who # 显示系统的启动时间 who -b # 显示系统登录进程 who -l # 显示与当前标准输入关联的用户信息 who -m # 显示系统的运行级别 who -r # 显示所有登录用户的用户名和登录用户数 who -q 4. uname - 查看系统信息uname命令用于打印内核名称和版本、主机名等系统信息。命令的语法如下所示： uname [OPTION]... 常用使用方式如下： # 只打印内核的名称 uname # 使用 -n 选项，只打印系统的主机名 uname -n # 使用 -r 选项，打印内核版本信息 uname -r # 使用 -m 选项，打印系统的硬件名称 uname -m # 使用 -p 选项，打印系统的处理器类型信息 uname -p # 使用 -i 选项，打印系统的硬件平台信息 uname -i # 使用 -a 选项，打印上述所有示例中的信息 uname -a 5. date - 显示和设置系统日期和时间date命令用于以多种格式显示日期和时间，或设置系统的日期和时间。date命令的语法如下所示： date [OPTION]... [+FORMAT] date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]] 常用使用命令如下： # 以默认格式显示系统的当前日期时间 date # 格式化当前日期 date +\"%Y-%m-%d\" # 格式化输出昨天的日期 date -d \"1 day ago\" +\"%Y-%m-%d\" # 2秒后格式化输出 date -d \"2 second\" +\"%Y-%m-%d %H:%M.%S\" # 普通格式化转出 date -d \"2009-12-12\" +\"%Y/%m/%d %H:%M.%S\" # apache格式转换 date -d \"Dec 5, 2009 12:00:37 AM\" +\"%Y-%m-%d %H:%M.%S\" # 日期加减操作 date +%Y%m%d #显示前天年月日 date -d \"+1 day\" +%Y%m%d #显示前一天的日期 date -d \"-1 day\" +%Y%m%d #显示后一天的日期 date -d \"-1 month\" +%Y%m%d #显示上一月的日期 date -d \"+1 month\" +%Y%m%d #显示下一月的日期 date -d \"-1 year\" +%Y%m%d #显示前一年的日期 date -d \"+1 year\" +%Y%m%d #显示下一年的日期 # 设定时间 date -s # 设置当前时间，只有root权限才能设置，其他只能查看 date -s 20160816 # 设置成20160816，这样会把具体时间设置成空00:00:00 date -s 01:01:01 # 设置具体时间，不会对日期做更改 date -s \"01:01:01 2012-05-23\" # 这样可以设置全部时间 date -s \"01:01:01 20120523\" # 这样可以设置全部时间 date -s \"2012-05-23 01:01:01\" # 这样可以设置全部时间 date -s \"20120523 01:01:01\" # 这样可以设置全部时间 6. id - 显示用户属性id命令用于打印输出用户uid、gid、用户名和组名等用户身份信息。id命令的语法如下所示： id [OPTION]... [USERNAME] 常见使用命令如下： # 输出当前用户的uid、用户名、gid、组名及用户属于的群组信息 id # 使用 -u 选项，输出用户的 uid id -u #-u 选项和 -n 选项结合使用，输出账户的用户名 id -un # 使用 -g 选项，输出帐号当前起作用的gid id -g # -g 与 -n 选项结合使用，输出帐号当前起作用的用户组名 id -gn # 使用 -G 选项，输出帐号所属的所有群组id id -G root # -G 与 -n 选项结合使用，输出账号所属的所有群组的名称 id -Gn root","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"常用Bash命令整理之文本处理","slug":"软件工具/Linux/常用Bash命令整理之文本处理","date":"2018-10-11T14:05:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/10/11/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-wen-ben-chu-li/","link":"","permalink":"http://yoursite.com/2018/10/11/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-wen-ben-chu-li/","excerpt":"","text":"1. sort - 文本排序sort命令用于将文本文件的行排序。默认情况下，sort命令是按照字符串的字母顺序排序。 sort 的常用命令如下： # 将文本内容按字母顺序排序 sort example.txt # 使用 -u 选项，移除所有重复行后排序 sort -u example.txt # 使用 -n 选项，将令数字按数值的大小排序 sort -n example.txt # 使用 -r 选项，以倒序方式排序 sort -n -r example.txt # 同时将 file1、file2 的内容排序 sort file1 file2 2.uniq - 文本去重uniq命令用于移除或发现文件中重复的条目。 # 它将移除文件中重复的行并显示单一行 uniq example.txt # 可以统计重复行出现的次数 uniq -c example.txt # 使用 -d 选项，只显示文件中有重复的行并只显示一次 uniq -d example.txt # 使用 -D 选项，显示文件中所有重复的行 uniq -D example.txt # 使用 -u 选项，只显示文件中不重复的行 uniq -u example.txt # 使用 -w 选项，限制 uniq 命令只比较每行的前 3 个字符是否重复 uniq -w 3 example.txt # 使用 -s 选项，避免 uniq 命令比较每行的前 3 个字符，只比较后面的字符是否重复 uniq -s 3 example.txt # 使用 -f 选项，避免 uniq 命令比较第一列的内容，只比较后面的字符是否重复 uniq -f 1 example.txt 3.tr - 替换或删除字符tr命令主要用于删除文件中控制字符或进行字符转换。使用tr时要转换两个字符串：字符串 1 用于查询，字符串 2 用于处理各种转换。tr刚执行时，字符串 1 中的字符被映射到字符串 2 中的字符，然后转换操作开始。 tr命令的语法如下所示： tr [OPTION]... SET1 [SET2] 常用命令示例： # 若要将大括号转换为小括号 tr '{}' '()' &lt; textfile > newfile # 若要将大括号转换成方括号 tr '{}' '\\[]' &lt; textfile > newfile # 若要将小写字符转换成大写，请输入： tr 'a-z' 'A-Z' &lt; textfile > newfile # 若要创建一个文件中的单词列表 tr -cs '[:lower:][:upper:]' '[\\n*]' &lt; textfile > newfile # 若要从某个文件中删除所有空字符 tr -d '\\0' &lt; textfile > newfile # 若要用单独的换行替换每一序列的一个或多个换行，请输入： tr -s '\\n' &lt; textfile > newfile # 要以单个“#”字符替换 &lt;space> 字符类中的每个字符序列 tr -s '[:space:]' '[#*]' 4.grep - 查找字符串grep命令用于搜索文本或指定的文件中与指定的字符串或模式相匹配的行。默认情况下，grep命令只显示匹配的行。 grep命令的语法如下所示： grep [OPTION]... PATTERN [FILE]... grep [OPTION]... [-e PATTERN | -f FILE] [FILE]... # `grep`命令查找文件/etc/passwd 中帐号 blinkfox 的信息 grep blinkfox /etc/passwd # 使用 -i 选项，强制 grep 命令忽略搜索关键字的大小写 grep -i blinkfox /etc/passwd # 使用 -r 选项，可以递归搜索指定目录下的所有文件 grep -r blinkfox /etc/ # 使用 -w 选项，只匹配包含指定单词的行 grep -w blinkfox /etc/ # 使用 -c 选项，报告文件或文本中模式被匹配的次数 grep -c blinkfox /etc/passwd # 使用 -n 选项，显示每一个匹配的行的行号 grep -n blinkfox /etc/passwd # 使用 -v 选项，可以输出除匹配指定模式的行以外的其他所有行 grep -v blinkfox /etc/passwd # 使用 --color 选项，在输出中将匹配的字符串以彩色的形式标出 grep --color blinkfox /etc/passwd 5.diff - 比较两个文件diff命令用于比较两个文件，并找出它们之间的不同。diff命令的语法如下所示： diff [OPTION]... from-file to-file 常用使用方式如下： # 比较两个文件 diff nsswitch.conf nsswitch.conf.org # 使用 -w 选项，比较时忽略空格 diff -w nsswitch.conf nsswitch.conf.org # 使用 -y 选项，以并排的格式输出两个文件的比较结果 diff -y nsswitch.conf nsswitch.conf.org 使用 -c 选项，以上下对比的格式输出两个文件的比较结果 diff -c nsswitch.conf nsswitch.conf.org","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"常用Bash命令整理之操作文件和目录","slug":"软件工具/Linux/常用Bash命令整理之操作文件和目录","date":"2018-10-10T15:10:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/10/10/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cao-zuo-wen-jian-he-mu-lu/","link":"","permalink":"http://yoursite.com/2018/10/10/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cao-zuo-wen-jian-he-mu-lu/","excerpt":"","text":"1. touch - 创建文件touch命令就可用于创建、变更和修改文件的时间戳。它是 Linux 操作系统的标准程序。touch命令又如下选项： -a: 只改变访问时间 -c: 不创建任何文件 -m: 只改变修改时间 -r: 使用指定文件的时间替代当前时间 -t: 使用 [[CC]YY]MMDDhhmm[.ss] 替代当前时间 touch 命令的常见用法如下： # 创建一个名为 effyl 的新空文件 touch effyl # 同时创建名称分别为 effyl myeffyl lueffyl 的三个文件 touch effyl myeffyl lueffyl # 使用 -a 选项，可以改变或更新文件的最新访问时间，如果文件 effyl 不存在，则新创建一个 touch -a effyl # 使用 -c 选项，可以避免创建一个新文件，并用当前时间更新文件的时间戳 touch -c effyl # 使用 -m 选项，可以只改变文件的修改时间，而访问时间不变 touch -m effyl # 使用 -c 和 -t 选项，来明确设置文件的时间 touch -c -t YYMMDDHHMM filename # 如果想使用文件 myeffyl 的时间戳更新文件 effyl 的时间戳，可以使用 -r 选项 touch -r myeffyl effyl 2.mkdir - 创建目录mkdir命令用于创建一个新目录。最基本的mkdir命令的使用方法如下所示： # 在当前目录下创建一个给定的目录名 mkdir &lt;dirname> # 在 backup 中的相对路径创建一个名为 old 的目录 mkdir backup/old # 在 backup 中的绝对路径中创建一个名为 old 的目录 mkdir /home/blinkfox/backup/old # 使用 -p 选项，会自动创建所有还不存在的父目录 mkdir -p backup/old # 使用 -m 选项，可以设置将要创建目录的权限 # 如：创建一个任何人都有读写访问权限的目录 mkdir -p -m 777 backup/old 3.cp - 复制文件或目录cp命令用于将文件从一个地方复制到另一个地方。原来的文件保持不变，新文件可能保持原名或用一个不同的名字。 使用 cp 命令复制文件和目录的语法有以下几种： # 复制源文件到目标文件 cp [OPTION] SOURCE DEST # 复制一个或多个源文件到一个目录 cp [OPTION] SOURCE... DIRECTORY # 同上 cp [OPTION] -t DIRECTORY SOURCE... 常用使用示例如下： # 在当前目录下，创建一个文件 file.txt 的副本，取名为 newfile.txt cp file.txt newfile.txt # 复制当前目录下的 file.txt 文件到 /tmp 目录下 cp file.txt /tmp # 复制当前目录下的所有文件到 /tmp 目录下 cp * /tmp # 使用 -p 选项，可以使复制一个文件到新文件时，保留源文件的所有者、权限等信息 cp -p filename /path/to/new/location/myfile # 使用 -R 或 -r 选项，恶意递归地复制一个目录 # 即将一个目录及其下的所有文件和子目录都复制到另一个目录 cp -R * /home/blinkfox/backup 4.ln - 链接文件或目录ln命令用于创建软链接或硬链接。使用 -s 选项，可以创建一个软链接： # 在目录 lib 下创建一个软链接 library.so，链接到 /home/blinkfox/src/library.so ln -s /home/blinkfox/src/library.so /home/blinkfox/lib # 创建目录的软链接 ln -s /home/blinkfox/src source 5. mv - 移动文件或目录mv命令用于将文件和目录从一个位置移到另外一个位置。除了移动文件，mv命令还可用于修改文件或目录的名字。 mv 命令的基本语法如下所示： mv SOURCE... DIRECTORY 常用命令如下： # 将当前目录下的文件 source.txt 移到目录 /tmp 下 mv source.txt /tmp # 将目录 dir1、dir2 移到目录 dir_dist 下 mv dir1 dir2 dir_dist # 将当前目录下的 old.txt 文件更名为 new.txt mv old.txt new.txt # 使用 -i 选项，在重写覆盖目标文件或目录之前给出提示信息 mv -i old.txt new.txt # 将当前目录下的所有文件移动到目录 /tmp 下 mv * /tmp/ # 使用 -i 选项，从 dir1 中移动那些在目标目录中不存在的文件到目标目录 mv -u dir1/* dir2/ 6.rm - 删除文件或目录rm命令用于删除指定的文件和目录。其语法如下所示： rm [OPTIONS]... FILE... rm的常用命令如下： # 删除当前目录下的文件 file1.txt、file2.txt、file3.txt rm file1.txt file2.txt file3.txt # 删除当前目录下的所有文件 rm * # 删除你当前帐号主目录下的 temp 目录中的所有文件 rm ~/temp/* # 使用 -i 选项，可以在删除每个文件或目录前提示用户确认 rm -i * # 删除当前目录下所有以\".doc\"结尾的文件 rm *.doc # 删除当前目录下所有文件名中包含\"movie\"字符串的文件 rm *movie* # 删除当前目录下所有以\"a\"开头的文件 rm a* # 删除当前目录下整个文件名（包括扩展名）只有 3 个字符的所有文件 rm ??? # 删除当前目录下文件扩展名有两个字符的所有文件 rm *.?? # 删除当前目录下文件名中含有字母 a 或 b 或 c 的所有文件 rm *[abc]* # 删除当前目录下文件名中包含 0~9 的所有文件 rm *[0-9]* # 删除当前目录下文件扩展名是字母 c 或 h 的所有文件 rm *.[ch] # 删除 /tmp 目录下的所有文件及其子目录 rm -rf /tmp/* -f 删除前不提示用户确认，并忽略不存在的文件 -r 递归地删除目录及其下的内容","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"常用Bash命令整理之查看文件和目录","slug":"软件工具/Linux/常用Bash命令整理之查看文件和目录","date":"2018-10-09T14:45:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/10/09/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cha-kan-wen-jian-he-mu-lu/","link":"","permalink":"http://yoursite.com/2018/10/09/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cha-kan-wen-jian-he-mu-lu/","excerpt":"","text":"1. ls - 列出文件名和目录ls命令是Linux中最常用的命令之一，其作用就是列出文件名和目录。在命令行提示符下，直接输入ls命令，不带任何选项，将列出当前目录下所有文件和目录，但不会显示详细的信息，比如，文件类型、大小、修改日期和时间、权限等。 以下便是ls命令及其选项的作用说明： # 仅列出当前目录下所有文件和目录 ls # 每行显示一条记录，每条记录包括文件类型、大小、修改日期和时间、权限等 ls -l # 将文件大小显示符合人类阅读习惯的格式 ls -lh # 将使用不同的特殊字符归类不同的文件类型 ls -F # 以长列表格式列出某个目录的信息 ls -ld /var/log # 将递归地列出子目录的内容 ls -R /etc/sysconfig/ # 以长列表格式按文件或目录的修改时间倒序地列出文件和目录 ls -ltr # 以长列表格式按文件大小顺序列出文件和目录 ls -ls # 列出包括隐藏文件或目录在内的所有文件和目录，包括“.”（当前目录）和“..”（父目录） ls -a # 列出包括隐藏文件或目录在内的所有文件和目录，不包括“.”（当前目录）和“..”（父目录） ls -A 输出的内容类似于-l选项，指示显示uid和gid，替代显示所有者和用户组 ls -n 2. cat - 连接显示文件内容cat 命令也是Linux系统中最常用的命令之一。cat命令让我们可以看看文件的内容、连接文件、创建一个或多个文件和重定向输出到终端或文件。 cat命令的语法如下所示： cat [OPTION] [FILE]... cat常用命令如下： # 使用 cat 命令查看文件 /etc/group 的内容 cat /etc/group # 显示多个文件的内容 cat /etc/redhat-release /etc/issue # -n 选项，可以显示文件内容的行号 cat -n /etc/fstab # -b 选项和 -n 选项类似，但只标识非空白行的行号 cat -b /etc/fstab # -e 选项，将在每一行的结尾显示“$”字符 cat -e /etc/fstab 当你只输入 cat 命令，而没有任何参数时，它只是接收标准输入的内容并在标准输出中显示。所以你在输入一行内容并回车后，会在接下来的一行显示相同的内容。你也可以重定向标准输出到一个新文件。 3.less、more - 分屏显示文件more命令在你使用小的xterm窗口时，或是想不使用文本编辑器而只是简单地阅读一个文件时是很有用的。more命令是一个用于一次翻阅一整屏文件的过滤器。 # 查看一个文件，自动清空屏幕并显示文件开头部分 more /etc/inittab # 指定一次显示num行 more -num /etc/inittab 与more命令相比，我个人更喜欢less命令来查看文件。less命令与more命令类似，但less命令向前和向后翻页都支持，而且less命令不需要在查看前加载整个文件，即less命令查看文件更快速。 less常用命令参数如下： -b &lt;缓冲区大小> 设置缓冲区的大小 -e 当文件显示结束后，自动离开 -f 强迫打开特殊文件，例如外围设备代号、目录和二进制文件 -g 只标志最后搜索的关键词 -i 忽略搜索时的大小写 -m 显示类似more命令的百分比 -N 显示每行的行号 -o &lt;文件名> 将less 输出的内容在指定文件中保存起来 -Q 不使用警告音 -s 显示连续空行为一行 -S 行过长时间将超出部分舍弃 -x &lt;数字> 将“tab”键显示为规定的数字空格 /字符串：向下搜索“字符串”的功能 ?字符串：向上搜索“字符串”的功能 n： 重复前一个搜索（与 / 或 ? 有关） N： 反向重复前一个搜索（与 / 或 ? 有关） b 向后翻一页 d 向后翻半页 h 显示帮助界面 Q 退出less 命令 u 向前滚动半页 y 向前滚动一行 空格键 滚动一行 回车键 滚动一页 [pagedown]： 向下翻动一页 [pageup]： 向上翻动一页 4.head - 显示文件头部head命令用于打印指定输入的开头部分内容。默认情况下，打印每个指定输入的前10行内容。 使用-n选项可以指定打印文件的前N行： # 指定打印文件的前5行 head -n 5 /etc/inittab （或）head -5 /etc/inittab # 打印文件的前N个字节的数据 head -c 10 /etc/inittab 5.tail - 显示文件尾部tail命令和head命令相反，它打印指定输入的结尾部分的内容。默认情况下，它打印指定输入的最后10行内容。 使用-n选项可以指定打印文件的最后N行： # 指定打印文件的后10行 tail -n 10 /etc/inittab tail -10 /etc/inittab # 即时打印文件中新写入的行 tail -f /var/log/messages # --retry选项表示持续尝试打开某个文件，当你想打开一个稍后才会创建或即使不可用的文件 tail -f /tmp/debug.log --retry 6.file - 查看文件类型file命令用于接收一个文件作为参数并执行某些测试，已确定正确的文件类型。 # 查看文件类型 file /etc/inittab # 可以MIME类型的格式显示文件类型的信息 file -i /etc/inittab # 使用-N 选项，输出的队列可以以在文件名之后无空白填充的形式显示 file -N * 7.wc - 查看文件统计信息wc命令用于查看文件的行数、单词数和字符数等信息。语法类似如下所示： wc filename X Y Z /etc/inittab 其中X表示行数，Y表示单词数，Z表示字节数，filename表示文件名。 # -l选项，可以只统计文件的行数信息 wc -l /etc/inittab # -w选项，可以只统计文件的单词数信息 wc -w /etc/inittab # -c选项，可以只统计文件的字节数信息 wc -c /etc/inittab # -L选项，可以只统计文件中最长的行的长度 wc -L /etc/inittab 8.find - 查找文件或目录find命令用于根据你指定的参数搜索和定位文件和目录的列表。find命令可以在多种情况下使用，比如你可以通过权限、用户、用户组、文件类型、日期、大小和其他可能的条件来查找文件。 find命令常用使用和说明如下： # 查找指定目录下的某个文件 find /etc/ -name inittab # 在当前目录下查找名称为 inittab 的文件 find . -name inittab # 在当前目录下，文件不区分大小写是example的所有文件 find . -iname example # 找出当前目录下所有以 sh 结尾的文件 find . -type f -name \"*.sh\" # 找出当前目录下，文件权限是 777 的所有文件 find . -type f -perm 777 # 找出当前目录下，文件权限不是 777 的所有文件 find . -type f ! -perm 777 # 找出当前目录下所有只读文件 find . -type f ! -perm /a+w # 找出你帐号主目录下的所有可执行文件 find ~ -type f -perm /a+w # 找出 /tmp 目录下的.log文件并将其删除： find /tmp/ -type f -name \"*.log\" -exec rm -f {} \\; # 找出当前目录下的所有空文件 find . -type f -empty # 找出当前目录下的所有空目录 find . -type d -empty # 找出 /tmp 目录下的所有隐藏文件 find /tmp/ -type f -name \".*\" # 找出 /tmp 目录下，所有者是 root 的文件和目录 find /tmp/ -user root # 找出 /tmp 目录下，用户组是 developer 的文件和目录 find /tmp/ -group root # 找出你账号的主目录下，3 天前修改的文件 find ~ -type f -mtime 3 # 找出你账号的主目录下，30 天以前修改的所有文件 find ~ -type f -mtime +30 # 找出你账号的主目录下，3 天以内修改的所有文件 find ~ -type f -mtime -3 # 找出你账号的主目录下，30 天以前，60 天以内修改的所有文件 find ~ -type f -mtime +30 -mtime -60 # 找出 /etc 目录下，一小时以内变更过的文件 find /etc -type f -cmin -60 # 找出 /etc 目录下，一小时以内访问过的文件 find /etc -type f -amin -60 # 找出你账号主目录下，大小是50MB的所有文件 find ~ -type f -size 50MB # 找出你账号主目录下，大于50MB小于100MB的所有文件 find ~ -type f -size +50MB -size -100MB # 找出你账号主目录下，大于100MB的文件并将其删除 find ~ -type f -size +100MB -exec rm -rf {} \\;","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]},{"title":"Git知识点整理","slug":"软件工具/Git/Git知识点整理","date":"2018-09-24T13:50:00.000Z","updated":"2019-03-02T09:49:57.000Z","comments":true,"path":"2018/09/24/ruan-jian-gong-ju/git/git-zhi-shi-dian-zheng-li/","link":"","permalink":"http://yoursite.com/2018/09/24/ruan-jian-gong-ju/git/git-zhi-shi-dian-zheng-li/","excerpt":"","text":"1. Git基本概念。 repository config init clone fetch pull commit push branch head tag merge conflict diff log show status 2. Git工作空间和文件状态(1).工作空间 左侧为工作区，右侧为版本库。 工作区（Working Directory） 就是在电脑里能看到的目录，比如learngit文件夹就是一个工作区。 版本库（Repository）工作区有一个隐藏目录.git，是Git的版本库。 在版本库中标记为index的区域为暂存区，标记为master的是Git为我们自动创建的第一个分支，代表的是目录树。此时HEAD实际是指向master分支的一个“游标”，所以图示的命令中出现HEAD的地方可以用master来替换。图中的objects标识的区域为git的对象库，实际位于.git/objects目录下。 当对工作区修改（或新增）的文件执行git add命令时，暂存区的目录树会被更新，同时工作区修改（或新增）的文件内容会被写入到对象库中的一个新的对象中，而该对象的id被记录在暂存区的文件索引中。 当执行提交操作git commit时，暂存区的目录树会写到版本库（对象库）中，master分支会做相应的更新，即master最新指向的目录树就是提交时原暂存区的目录树。 当执行git reset HEAD命令时，暂存区的目录树会被重写，会被master分支指向的目录树所替换，但是工作区不受影响。 当执行git rm --cached命令时，会直接从暂存区删除文件，工作区则不做出改变。 当执行git checkout .或git checkout -- 命令时，会用暂存区全部的文件或指定的文件替换工作区的文件。这个操作很危险，会清楚工作区中未添加到暂存区的改动。 当执行git checkout HEAD .或git checkout HEAD命令时，会用HEAD指向的master分支中的全部或部分文件替换暂存区和工作区中的文件。这个命令也是极度危险的。因为不但会清楚工作区中未提交的改动，也会清楚暂存区中未提交的改动。 (1).文件状态Git 有三种状态，你的文件可能处于其中之一：已提交(committed)、已修改(modified)和已暂存(staged)。 3. Git配置系统级、全局、当前仓库用户名、邮箱的命令系统级、全局、当前仓库选项分别是:仓库-system、-global、-local(或默认不填) git config --global user.name \"Jerry Mouse\" git config --global user.email \"jerry@yiibai.com\" 列出Git设置 git config --list git config -l 4. Git fetch和pull的区别 git fetch：相当于是从远程获取最新版本到本地，不会自动merge. git pull：相当于是从远程获取最新版本并merge到本地. (1). git fetch示例：Git fetch origin master git log -p master..origin/master git merge origin/master 以上命令的含义： 首先从远程的origin的master主分支下载最新的版本到origin/master分支上 然后比较本地的master分支和origin/master分支的差别 最后进行合并 上述过程其实可以用以下更清晰的方式来进行： (1). git pull示例：git pull origin master 上述命令其实相当于git fetch和git merge。在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。 5. Git reset和revert的却别 git revert是用一次新的commit来回滚之前的commit，git reset是直接删除指定的commit。 在回滚这一操作上看，效果差不多。但是在日后继续merge以前的老版本时有区别。因为git revert是用一次逆向的commit“中和”之前的提交，因此日后合并老的branch时，导致这部分改变不会再次出现，但是git reset是之间把某些commit在某个branch上删除，因而和老的branch再次merge时，这些被回滚的commit应该还会被引入。 git reset是把HEAD向后移动了一下，而git revert是HEAD继续前进，只是新的commit的内容和要revert的内容正好相反，能够抵消要被revert的内容。 git revert与git reset最大的不同是，git revert 仅仅是撤销某次提交。 另外，说一下git revert， git reset –hard和 –soft的区别 git reset –mixed id: 是将git的HEAD变了（也就是提交记录变了），但文件并没有改变，（也就是working tree并没有改变）。 git reset –soft id: 实际上，是git reset –mixed id后，又做了一次git add。 git reset –herd id: 是将git的HEAD变了，文件也变了。 6. Git merge和reabse的相同点和不同点merge是合并的意思，rebase是复位基底的意思，相同点都是用来合并分支的。 不同点: merge操作会生成一个新的节点，之前的提交分开显示。而rebase操作不会生成新的节点，是将两个分支融合成一个线性的提交。 解决冲突时。merge操作遇到冲突的时候，当前merge不能继续进行下去。手动修改冲突内容后，add 修改，commit就可以了。而rebase操作的话，会中断rebase,同时会提示去解决冲突。解决冲突后,将修改add后执行git rebase –continue继续操作，或者git rebase –skip忽略冲突。 git pull和git pull --rebase区别：git pull做了两个操作分别是”获取”和”合并”。所以加了rebase就是以rebase的方式进行合并分支，默认为merge。 总结：选择 merge 还是 rebase？ merge 是一个合并操作，会将两个分支的修改合并在一起，默认操作的情况下会提交合并中修改的内容 merge 的提交历史忠实地记录了实际发生过什么，关注点在真实的提交历史上面 rebase 并没有进行合并操作，只是提取了当前分支的修改，将其复制在了目标分支的最新提交后面 rebase 的提交历史反映了项目过程中发生了什么，关注点在开发过程上面 merge 与 rebase 都是非常强大的分支整合命令，没有优劣之分，使用哪一个应由项目和团队的开发需求决定 merge 和 rebase 还有很多强大的选项，可以使用 git help 查看 7. Git stash是什么？它的相关使用方式命令 git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。 git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。 git stash pop –index stash@{0}: 恢复编号为0的进度的工作区和暂存区。 git stash apply stash@{1} 以将你指定版本号为stash@{1}的工作取出来 git stash drop[] 删除某一个进度，默认删除最新进度 git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。 git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了 # 恢复工作进度 git stash pop [--index] [&lt;stash>] --index 参数：不仅恢复工作区，还恢复暂存区 &lt;stash> 指定恢复某一个具体进度。如果没有这个参数，默认恢复最新进度 # 这是git stash保存进度的完整命令形式 git stash [save message] [-k|--no-keep-index] [--patch] -k和--no-keep-index指定保存进度后，是否重置暂存区 --patch 会显示工作区和HEAD的差异,通过编辑差异文件，排除不需要保存的内容。和git add -p命令类似 使用save可以对进度添加备注 # git stash save \"这是保存的进度\" 8. Git只从暂存区删除，从工作空间删除的命令分别是什么?git rm --cached git rm git commit 9. Git标签的使用# 列出现有的标签 git tag # 打标签 git tag -a v1.01 -m \"Relase version 1.01\" # 查看相应标签的版本信息 git show v1.4 -a 选项,创建一个含附注类型的标签 -m 选项,指定了对应的标签说明 9. Git分支的使用# 查看本地分支 git branch # 查看远程分支 git branch -r # 创建本地分支(注意新分支创建后不会自动切换为当前分支) git branch [name] # 切换分支 git checkout [name] # 创建新分支并立即切换到新分支 git checkout -b [name] # 强制删除一个分支 git branch -D [name] # 合并分支(将名称为[name]的分支与当前分支合并) git merge [name] # 查看各个分支最后提交信息 git br -v # 查看已经被合并到当前分支的分支 git br --merged # 查看尚未被合并到当前分支的分支 git br --no-merged 10. 介绍Git冲突处理经验，以及merge和rebase中的ours和theirs的差别。merge和rebase对于ours和theirs的定义是完全相反的。在merge时，ours指代的是当前分支，theirs代表需要被合并的分支。而在rebase过程中，ours指向了修改参考分支，theirs却是当前分支。因为rebase 隐含了一个git checkout upstream的过程，将HEAD从local分支变成了upstream分支。git会在rebase结束后撤销这个改变，但它已经不可避免地影响了冲突的状态，使rebase中ours和theirs的定义与merge 截然相反。因此，在使用ours与theirs时请格外小心。 11. Git远程操作相关(1). clone git clone &lt;版本库的网址&gt;git clone &lt;版本库的网址&gt; &lt;本地目录名&gt; # 克隆jQuery的版本库 git clone https://github.com/jquery/jquery.git git clone -o jQuery https://github.com/jquery/jquery.git (2). remote# 列出所有远程主机 git remote # 使用-v选项，可以参看远程主机的网址 git remote -v # 可以查看该主机的详细信息 git remote show &lt;主机名> # 添加远程主机 git remote add &lt;主机名> &lt;网址> # 删除远程主机 git remote rm &lt;主机名> # 修改远程主机名称 git remote rename &lt;原主机名> &lt;新主机名> (3). fetch# 取回所有分支(branch)的更新到本地 git fetch &lt;远程主机名> # 取回某的特定分支的更新 git fetch &lt;远程主机名> &lt;分支名> # 取回origin主机的master分支的更新 git fetch origin master # 所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如origin主机的master，就要用origin/master读取。可以使用git merge命令或者git rebase命令，在本地分支上合并远程分支 git merge origin/master git rebase origin/master (4). pull git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; # 取回origin主机的next分支，与本地的master分支合并 git pull origin next:master # 如果远程分支是与当前分支合并，则冒号后面的部分可以省略。 git pull origin next # 上面的命令实质上等同于先做git fetch，再做git merge。 git fetch origin git merge origin/next # 合并需要采用rebase模式 git pull --rebase &lt;远程主机名> &lt;远程分支名>:&lt;本地分支名> (5). push git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; 注意:分支推送顺序的写法是”&lt;来源地&gt;:&lt;目的地&gt;”，所以git pull是”&lt;远程分支&gt;:&lt;本地分支&gt;”，而git push是”&lt;本地分支&gt;:&lt;远程分支&gt;”。 如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支(通常两者同名)，如果该远程分支不存在，则会被新建。 如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。 # 将本地的master分支推送到origin主机的master分支。如果后者不存在，则会被新建 git push origin master # 省略了本地分支，以下等同，删除origin主机的master分支 git push origin :master git push origin --delete master # 如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略 git push origin # 如果当前分支只有一个追踪分支，那么主机名都可以省略。 git push # 如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push git push -u origin master # 不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机 git push --all origin # 强制推送 git push --force origin # git push不会推送标签(tag)，除非使用–tags选项 git push origin --tags 12. Git Flow使用简介就像代码需要代码规范一样，代码管理同样需要一个清晰的流程和规范。三种广泛使用的工作流程： Git flow Github flow Gitlab flow 三种工作流程，有一个共同点：都采用”功能驱动式开发”（Feature-driven development，简称FDD）。它指的是，需求是开发的起点，先有需求再有功能分支（feature branch）或者补丁分支（hotfix branch）。完成开发后，该分支就合并到主分支，然后被删除。最早诞生、并得到广泛采用的一种工作流程，就是Git flow。 它最主要的特点有两个。首先，项目存在两个长期分支，分别是：主分支master、开发分支develop。其次，项目存在三种短期分支，分别是：功能分支（feature branch）、补丁分支（hotfix branch）、预发分支（release branch），一旦完成开发，它们就会被合并进develop或master，然后被删除。 (1). Git Flow流程图 (2). Git Flow常用的分支 Production分支。也就是我们经常使用的Master分支，这个分支最近发布到生产环境的代码，最近发布的Release， 这个分支只能从其他分支合并，不能在这个分支直接修改。 Develop分支。这个分支是我们是我们的主开发分支，包含所有要发布到下一个Release的代码，这个主要合并与其他分支，比如Feature分支。 Feature分支。这个分支主要是用来开发一个新的功能，一旦开发完成，我们合并回Develop分支进入下一个Release。 Release分支。当你需要一个发布一个新Release的时候，我们基于Develop分支创建一个Release分支，完成Release后，我们合并到Master和Develop分支。 Hotfix分支。当我们在Production发现新的Bug时候，我们需要创建一个Hotfix, 完成Hotfix后，我们合并回Master和Develop分支，所以Hotfix的改动会进入下一个Release。 (3). Git Flow代码示例a. 创建develop分支git branch develop git push -u origin develop b. 开始新Feature开发git checkout -b some-feature develop # Optionally, push branch to origin: git push -u origin some-feature # 做一些改动 git status git add some-file git commit c. 完成Featuregit pull origin develop git checkout develop git merge --no-ff some-feature git push origin develop git branch -d some-feature # If you pushed branch to origin: git push origin --delete some-feature d. 开始Relasegit checkout -b release-0.1.0 develop # Optional: Bump version number, commit # Prepare release, commit e. 完成Releasegit checkout master git merge --no-ff release-0.1.0 git push git checkout develop git merge --no-ff release-0.1.0 git push git branch -d release-0.1.0 # If you pushed branch to origin: git push origin --delete release-0.1.0 git tag -a v0.1.0 master git push --tags f. 开始Hotfixgit checkout -b hotfix-0.1.1 master g. 完成Hotfixgit checkout master git merge --no-ff hotfix-0.1.1 git push git checkout develop git merge --no-ff hotfix-0.1.1 git push git branch -d hotfix-0.1.1 git tag -a v0.1.1 master git push --tags","categories":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://yoursite.com/tags/Git/"}],"keywords":[{"name":"软件工具","slug":"软件工具","permalink":"http://yoursite.com/categories/软件工具/"}]}]}